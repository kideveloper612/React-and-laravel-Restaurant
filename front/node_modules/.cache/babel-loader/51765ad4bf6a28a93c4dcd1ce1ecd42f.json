{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { wrapRequest, xapi } from '../utils';\nimport { oAuth2 } from 'config/settings';\nvar login = wrapRequest(\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(username, password) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", xapi().post('/oauth/token', _objectSpread({}, oAuth2, {\n              username: username,\n              password: password\n            })));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\nvar getUser = wrapRequest(\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee2() {\n  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.abrupt(\"return\", xapi().get('/api/user'));\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _callee2);\n})));\nexport { login, getUser };","map":{"version":3,"sources":["E:\\3-Limyong\\front\\src\\services\\auth\\authApi.js"],"names":["wrapRequest","xapi","oAuth2","login","username","password","post","getUser","get"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,IAAtB,QAAkC,UAAlC;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,IAAMC,KAAK,GAAGH,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAC,iBAAOI,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,6CACxBJ,IAAI,GAAGK,IAAP,CAAY,cAAZ,oBACKJ,MADL;AAEEE,cAAAA,QAAQ,EAARA,QAFF;AAGEC,cAAAA,QAAQ,EAARA;AAHF,eADwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAAzB;AAQA,IAAME,OAAO,GAAGP,WAAW;AAAA;AAAA;AAAA;AAAA,yBAAC;AAAA;AAAA;AAAA;AAAA;AAAA,4CAAYC,IAAI,GAAGO,GAAP,CAAW,WAAX,CAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAD,GAA3B;AAEA,SAASL,KAAT,EAAgBI,OAAhB","sourcesContent":["import { wrapRequest, xapi } from '../utils';\nimport { oAuth2 } from 'config/settings';\n\nconst login = wrapRequest(async (username, password) =>\n  xapi().post('/oauth/token', {\n    ...oAuth2,\n    username,\n    password\n  })\n);\n\nconst getUser = wrapRequest(async () => xapi().get('/api/user'));\n\nexport { login, getUser };\n"]},"metadata":{},"sourceType":"module"}