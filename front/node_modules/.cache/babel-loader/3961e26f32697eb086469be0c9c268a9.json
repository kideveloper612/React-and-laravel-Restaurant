{"ast":null,"code":"import _defineProperty from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"E:\\\\3-Limyong\\\\front\\\\src\\\\scenes\\\\Home\\\\scenes\\\\Cities\\\\scenes\\\\List\\\\List.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { toastr } from 'react-redux-toastr';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { withRouter } from 'react-router-dom';\nimport CSVParse from 'csv-parse';\nimport moment from 'moment';\nimport { Button, FormGroup, Label, Input, UncontrolledCollapse, Card, CardImg, CardTitle, CardText, CardImgOverlay, Table } from 'reactstrap';\nimport queryString from 'query-string';\nimport { csv2array } from 'services/utils'; // Import Components\n\nimport { Pagination } from 'components'; // Import actions\n\nimport { getCities, deleteCity, addCities } from 'services/city/cityActions';\nimport { showModal } from 'modals/modalConductorActions'; // Import Utility functions\n\nimport { errorMsg, updateSearchQueryInUrl } from 'services/utils'; // Import settings\n\nimport settings from 'config/settings';\nvar VIEW_MODE_TILE = 'VIEW_MODE_TILE';\nvar VIEW_MODE_TABLE = 'VIEW_MODE_TABLE';\n\nvar List =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(List, _React$Component);\n\n  function List(props) {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this, props));\n    _this.state = {\n      activePage: 1,\n      // Handle pagination active\n      viewMode: VIEW_MODE_TILE\n    };\n    _this.filter = {};\n    _this.renderCitiesTable = _this.renderCitiesTable.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderCitiesTile = _this.renderCitiesTile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderFilter = _this.renderFilter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderPagination = _this.renderPagination.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onPaginationSelect = _this.onPaginationSelect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onFilterChange = _this.onFilterChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSearchClick = _this.onSearchClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onViewModeChange = _this.onViewModeChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onDelete = _this.onDelete.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onEdit = _this.onEdit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onClickAddCityFromExcel = _this.onClickAddCityFromExcel.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChangeCSVFile = _this.onChangeCSVFile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onExportCSV = _this.onExportCSV.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Parse query string and send endpoint call\n      var params = queryString.parse(this.props.location.search);\n\n      if (params.page) {\n        this.setState({\n          activePage: params.page\n        });\n      }\n\n      this.props.cityActions.getCities(params);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.error !== prevProps.error && this.props.error !== null) {\n        var msg = errorMsg(this.props.error);\n        toastr.error(msg.title, msg.message);\n      }\n\n      if (this.props.success !== prevProps.success && this.props.success === true) {\n        toastr.success('Success', this.props.message);\n      } // If query param is changed\n\n\n      if (prevProps.location.search !== this.props.location.search) {\n        var params = queryString.parse(this.props.location.search);\n\n        if (params.page) {\n          this.setState({\n            activePage: params.page\n          });\n          this.props.cityActions.getCities(params);\n        }\n      }\n    }\n  }, {\n    key: \"onFilterChange\",\n    value: function onFilterChange(e) {\n      this.filter = _objectSpread({}, this.filter, _defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"onSearchClick\",\n    value: function onSearchClick() {\n      updateSearchQueryInUrl(this);\n    }\n  }, {\n    key: \"onViewModeChange\",\n    value: function onViewModeChange(viewMode) {\n      this.setState({\n        viewMode: viewMode\n      });\n    }\n  }, {\n    key: \"onPaginationSelect\",\n    value: function onPaginationSelect(selectedPage) {\n      var values = queryString.parse(this.props.location.search);\n      values = _objectSpread({}, values, {\n        page: selectedPage\n      });\n      var searchQuery = queryString.stringify(values);\n      this.props.history.push({\n        pathname: this.props.location.pathname,\n        search: \"?\".concat(searchQuery)\n      });\n    }\n  }, {\n    key: \"onEdit\",\n    value: function onEdit(city, e) {\n      e.stopPropagation();\n      this.props.modalActions.showModal('EDIT_CITY_MODAL', city);\n    } /// Handle delete button click event\n\n  }, {\n    key: \"onDelete\",\n    value: function onDelete(id, e) {\n      var _this2 = this;\n\n      e.stopPropagation();\n      Swal({\n        title: 'Are you sure?',\n        text: \"You won't be able to revert this!\",\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, delete it!'\n      }).then(function (result) {\n        if (result.value) {\n          _this2.props.cityActions.deleteCity(id);\n        }\n      });\n    }\n  }, {\n    key: \"onClickAddCityFromExcel\",\n    value: function onClickAddCityFromExcel() {\n      this.csvUploader.click();\n    }\n  }, {\n    key: \"onChangeCSVFile\",\n    value: function onChangeCSVFile(event) {\n      var _this3 = this;\n\n      var file = event.target.files[0];\n\n      if (file === undefined) {\n        return;\n      }\n\n      console.log(file);\n      var filename = file.name;\n\n      if (filename.substr(filename.length - 4, 4) !== \".csv\") {\n        toastr.warning('Warning', \"Please select .csv file\");\n        return;\n      }\n\n      var fileReader = new FileReader();\n      var output = [];\n\n      fileReader.onload = function () {\n        var params = queryString.parse(_this3.props.location.search);\n        CSVParse(fileReader.result, {}).on('readable', function () {\n          var record;\n\n          while (record = this.read()) {\n            var item = {};\n\n            if (record[5] !== '') {\n              item['created_at'] = moment().format('YYYY-MM-DD HH:mm:ss');\n              item['updated_at'] = moment().format('YYYY-MM-DD HH:mm:ss');\n              item['id'] = record[0];\n              item['name'] = record[1];\n              item['order'] = record[2];\n              item['image_url'] = record[3];\n              item['is_open'] = record[4];\n              item['action'] = record[5];\n              output.push(item);\n            }\n          }\n        }).on('end', function () {\n          console.log(output[0]);\n\n          if (output[0]['id'] != \"City_Id\") {\n            toastr.warning('Warning', \"Please select file for City data\");\n            return;\n          }\n\n          output.splice(0, 1);\n          console.log(output);\n\n          if (output.length === 0) {\n            toastr.warning('Warning', \"No operations in file\");\n            return;\n          } else {\n            _this3.props.cityActions.addCities(output, params);\n          }\n        });\n      };\n\n      fileReader.readAsText(file, \"UTF-8\");\n    }\n  }, {\n    key: \"downloadCSV\",\n    value: function downloadCSV(csv, filename) {\n      var csvFile;\n      var downloadLink; // CSV file\n\n      csvFile = new Blob([\"\\uFEFF\" + csv], {\n        type: \"text/csv;charset=UTF-8\"\n      }); // Download link\n\n      downloadLink = document.createElement(\"a\"); // File name\n\n      downloadLink.download = filename; // Create a link to the file\n\n      downloadLink.href = window.URL.createObjectURL(csvFile); // Hide download link\n\n      downloadLink.style.display = \"none\"; // Add the link to DOM\n\n      document.body.appendChild(downloadLink); // Click download link\n\n      downloadLink.click();\n    }\n  }, {\n    key: \"exportTableToCSV\",\n    value: function exportTableToCSV(filename) {\n      var csv = [];\n      var rows = document.querySelectorAll(\"table tr\");\n\n      for (var i = 0; i < rows.length; i++) {\n        var row = [],\n            cols = rows[i].querySelectorAll(\"td, th\");\n\n        if (i === 0) {\n          row = ['City_Id', 'Name', 'Order', 'Image Url', 'Opened/Closed', 'Act(i/u/d)'];\n        } else {\n          row.push(cols[0].attributes[1].value);\n          row.push(cols[1].innerText);\n          row.push(cols[3].innerText);\n\n          if (cols[0].attributes[2]) {\n            row.push(cols[0].attributes[2].value); // Image Url\n          } else {\n            row.push(\"\");\n          }\n\n          if (cols[2].innerText === 'Opened') {\n            row.push('1');\n          } else {\n            row.push('0');\n          }\n\n          row.push(\"\");\n        }\n\n        csv.push(row.join(\",\"));\n      } // Download CSV file\n\n\n      this.downloadCSV(csv.join(\"\\n\"), filename);\n    }\n  }, {\n    key: \"onExportCSV\",\n    value: function onExportCSV() {\n      this.setState({\n        viewMode: VIEW_MODE_TABLE\n      });\n      var self = this;\n      setTimeout(function () {\n        self.exportTableToCSV(\"City.csv\");\n      }, 500);\n    }\n  }, {\n    key: \"renderCitiesTable\",\n    value: function renderCitiesTable() {\n      var _this4 = this;\n\n      if (this.props.cities) {\n        var data = this.props.cities.data;\n\n        if (data && data.length > 0) {\n          var cityTableRows = data.map(function (city, index) {\n            return React.createElement(\"tr\", {\n              key: city.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 277\n              },\n              __self: this\n            }, React.createElement(\"th\", {\n              scope: \"row\",\n              data_id: city.id,\n              data_image: city.image_url,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 278\n              },\n              __self: this\n            }, \" \", index + 1, \" \"), React.createElement(\"th\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 279\n              },\n              __self: this\n            }, React.createElement(Link, {\n              to: {\n                pathname: '/restaurants',\n                search: \"?city=\".concat(city.id)\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 280\n              },\n              __self: this\n            }, city.name)), React.createElement(\"th\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 289\n              },\n              __self: this\n            }, city.is_open ? 'Opened' : 'Closed'), React.createElement(\"th\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 290\n              },\n              __self: this\n            }, city.order), React.createElement(\"th\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 291\n              },\n              __self: this\n            }, React.createElement(Button, {\n              color: \"warning\",\n              onClick: function onClick(e) {\n                _this4.onEdit(city, e);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 292\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"fa fa-edit\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 298\n              },\n              __self: this\n            })), React.createElement(Button, {\n              color: \"danger\",\n              onClick: function onClick(e) {\n                _this4.onDelete(city.id, e);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 300\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"fa fa-trash\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 306\n              },\n              __self: this\n            }))));\n          });\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 313\n            },\n            __self: this\n          }, React.createElement(Table, {\n            striped: true,\n            bordered: true,\n            responsive: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 314\n            },\n            __self: this\n          }, React.createElement(\"thead\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 315\n            },\n            __self: this\n          }, React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 316\n            },\n            __self: this\n          }, React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 317\n            },\n            __self: this\n          }, \"#\"), React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 318\n            },\n            __self: this\n          }, \"Name\"), React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 319\n            },\n            __self: this\n          }, \"Open\"), React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 320\n            },\n            __self: this\n          }, \"Order\"), React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 321\n            },\n            __self: this\n          }, \"Actions\"))), React.createElement(\"tbody\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 324\n            },\n            __self: this\n          }, cityTableRows)));\n        } else {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 329\n            },\n            __self: this\n          }, \"No City Data to list\");\n        }\n      }\n    }\n  }, {\n    key: \"renderCitiesTile\",\n    value: function renderCitiesTile() {\n      var _this5 = this;\n\n      if (this.props.cities) {\n        var data = this.props.cities.data;\n\n        if (data && data.length > 0) {\n          return data.map(function (city, index) {\n            var closedSz = '';\n\n            if (!city.is_open) {\n              closedSz = '(Closed)';\n            }\n\n            var image_url = city.image_url;\n\n            if (city.image_url === null) {\n              image_url = \"https://loremflickr.com/g/320/240/paris\";\n            }\n\n            if (city.image_url !== null && city.image_url.substring(0, 4) !== 'http') {\n              image_url = settings.BASE_URL + image_url;\n            }\n\n            return React.createElement(\"div\", {\n              key: index,\n              className: \"col-lg-3 col-md-6 col-xs-12 mb-3 d-flex align-items-stretch\",\n              onClick: function onClick() {\n                _this5.props.history.push(\"/restaurants?city=\".concat(city.id));\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 353\n              },\n              __self: this\n            }, React.createElement(Card, {\n              className: \"text-center w-100\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 360\n              },\n              __self: this\n            }, React.createElement(CardImg, {\n              top: true,\n              width: \"100%\",\n              height: \"280px\",\n              className: \"city-image-tile\",\n              src: image_url,\n              alt: city.name,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 361\n              },\n              __self: this\n            }), React.createElement(\"div\", {\n              className: \"overlay-color\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 369\n              },\n              __self: this\n            }), React.createElement(CardImgOverlay, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 370\n              },\n              __self: this\n            }, React.createElement(CardTitle, {\n              className: \"tile-view-card-title\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 371\n              },\n              __self: this\n            }, city.name + closedSz), React.createElement(CardText, {\n              className: \"tile-view-card-id\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 374\n              },\n              __self: this\n            }, city.id), React.createElement(\"div\", {\n              className: \"card-buttons-hover-show\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 377\n              },\n              __self: this\n            }, React.createElement(Button, {\n              size: \"sm\",\n              color: \"warning\",\n              onClick: function onClick(e) {\n                _this5.onEdit(city, e);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 378\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"fa fa-edit\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 385\n              },\n              __self: this\n            })), React.createElement(Button, {\n              size: \"sm\",\n              color: \"danger\",\n              onClick: function onClick(e) {\n                _this5.onDelete(city.id, e);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 387\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"fa fa-trash\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 394\n              },\n              __self: this\n            }))))));\n          });\n        } else {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 403\n            },\n            __self: this\n          }, \"No City Data to list\");\n        }\n      }\n    }\n  }, {\n    key: \"renderPagination\",\n    value: function renderPagination() {\n      if (this.props.cities && this.props.cities.meta && this.props.cities.data && this.props.cities.data.length > 0) {\n        return React.createElement(Pagination, {\n          totalItems: this.props.cities.meta.total,\n          pageSize: parseInt(this.props.cities.meta.per_page),\n          onSelect: this.onPaginationSelect,\n          activePage: parseInt(this.state.activePage),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"renderFilter\",\n    value: function renderFilter() {\n      var _this6 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"default\",\n        onClick: function onClick() {\n          _this6.props.modalActions.showModal('ADD_CITY_MODAL');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }), \"\\xA0Add city\"), React.createElement(Button, {\n        id: \"toggle_city\",\n        color: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }, \"Open filter\\xA0\", React.createElement(\"i\", {\n        className: \"fa fa-filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"file\",\n        style: {\n          display: 'none'\n        },\n        onChange: this.onChangeCSVFile,\n        onClick: function onClick(e) {\n          return e.target.value = null;\n        },\n        ref: function ref(_ref) {\n          _this6.csvUploader = _ref;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"default\",\n        onClick: this.onClickAddCityFromExcel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-file-excel-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }), \"\\xA0Add from CSV\"), React.createElement(Button, {\n        color: \"default\",\n        onClick: this.onExportCSV,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-file-excel-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }), \"\\xA0Export csv\"), \"\\xA0\\xA0\\xA0\\xA0\", React.createElement(Button, {\n        onClick: function onClick() {\n          return _this6.onViewModeChange(VIEW_MODE_TILE);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-th\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      })), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this6.onViewModeChange(VIEW_MODE_TABLE);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-th-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      })), React.createElement(UncontrolledCollapse, {\n        toggler: \"#toggle_city\",\n        className: \"col-md-8 col-sm-12 mt-5 mb-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      }, \"City\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"city_name\",\n        onChange: this.onFilterChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      })), React.createElement(Button, {\n        onClick: this.onSearchClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }), \"Search\")));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          loading = _this$props.loading,\n          message = _this$props.message; /// if loading status show sweet alert\n\n      if (loading) {\n        Swal({\n          title: 'Please wait...',\n          text: message,\n          onOpen: function onOpen() {\n            Swal.showLoading();\n          },\n          allowOutsideClick: false,\n          allowEscapeKey: false,\n          allowEnterKey: false\n        });\n      } else {\n        Swal.close();\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-center mb-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }, \"Cities\"), React.createElement(\"div\", {\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514\n        },\n        __self: this\n      }, this.renderFilter()), React.createElement(\"div\", {\n        className: \"d-flex flex-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      }, this.state.viewMode === VIEW_MODE_TABLE ? this.renderCitiesTable() : React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524\n        },\n        __self: this\n      }, this.renderCitiesTile()), this.renderPagination()));\n    }\n  }]);\n\n  return List;\n}(React.Component);\n\nList = withRouter(List);\nexport default connect(function (state) {\n  return _objectSpread({}, state.default.services.city);\n}, function (dispatch) {\n  return {\n    cityActions: bindActionCreators({\n      addCities: addCities,\n      getCities: getCities,\n      deleteCity: deleteCity\n    }, dispatch),\n    modalActions: bindActionCreators({\n      showModal: showModal\n    }, dispatch)\n  };\n})(List);","map":{"version":3,"sources":["E:\\3-Limyong\\front\\src\\scenes\\Home\\scenes\\Cities\\scenes\\List\\List.js"],"names":["React","connect","bindActionCreators","toastr","Link","Swal","withRouter","CSVParse","moment","Button","FormGroup","Label","Input","UncontrolledCollapse","Card","CardImg","CardTitle","CardText","CardImgOverlay","Table","queryString","csv2array","Pagination","getCities","deleteCity","addCities","showModal","errorMsg","updateSearchQueryInUrl","settings","VIEW_MODE_TILE","VIEW_MODE_TABLE","List","props","state","activePage","viewMode","filter","renderCitiesTable","bind","renderCitiesTile","renderFilter","renderPagination","onPaginationSelect","onFilterChange","onSearchClick","onViewModeChange","onDelete","onEdit","onClickAddCityFromExcel","onChangeCSVFile","onExportCSV","params","parse","location","search","page","setState","cityActions","prevProps","error","msg","title","message","success","e","target","name","value","selectedPage","values","searchQuery","stringify","history","push","pathname","city","stopPropagation","modalActions","id","text","type","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","csvUploader","click","event","file","files","undefined","console","log","filename","substr","length","warning","fileReader","FileReader","output","onload","on","record","read","item","format","splice","readAsText","csv","csvFile","downloadLink","Blob","document","createElement","download","href","window","URL","createObjectURL","style","display","body","appendChild","rows","querySelectorAll","i","row","cols","attributes","innerText","join","downloadCSV","self","setTimeout","exportTableToCSV","cities","data","cityTableRows","map","index","image_url","is_open","order","closedSz","substring","BASE_URL","meta","total","parseInt","per_page","ref","loading","onOpen","showLoading","allowOutsideClick","allowEscapeKey","allowEnterKey","close","Component","default","services","dispatch"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,SACEC,MADF,EAEEC,SAFF,EAGEC,KAHF,EAIEC,KAJF,EAKEC,oBALF,EAMEC,IANF,EAOEC,OAPF,EAQEC,SARF,EASEC,QATF,EAUEC,cAVF,EAWEC,KAXF,QAYO,YAZP;AAaA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,SAAT,QAA0B,gBAA1B,C,CACA;;AACA,SAASC,UAAT,QAA2B,YAA3B,C,CAEA;;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,SAAhC,QAAiD,2BAAjD;AACA,SAASC,SAAT,QAA0B,8BAA1B,C,CAEA;;AACA,SAASC,QAAT,EAAmBC,sBAAnB,QAAiD,gBAAjD,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,IAAMC,cAAc,GAAG,gBAAvB;AACA,IAAMC,eAAe,GAAG,iBAAxB;;IAEMC,I;;;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,CADD;AACI;AACfC,MAAAA,QAAQ,EAAEN;AAFC,KAAb;AAKA,UAAKO,MAAL,GAAc,EAAd;AAEA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,uDAAzB;AACA,UAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBD,IAAtB,uDAAxB;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,uDAApB;AACA,UAAKG,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBH,IAAtB,uDAAxB;AAEA,UAAKI,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBJ,IAAxB,uDAA1B;AACA,UAAKK,cAAL,GAAsB,MAAKA,cAAL,CAAoBL,IAApB,uDAAtB;AACA,UAAKM,aAAL,GAAqB,MAAKA,aAAL,CAAmBN,IAAnB,uDAArB;AACA,UAAKO,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBP,IAAtB,uDAAxB;AACA,UAAKQ,QAAL,GAAgB,MAAKA,QAAL,CAAcR,IAAd,uDAAhB;AACA,UAAKS,MAAL,GAAc,MAAKA,MAAL,CAAYT,IAAZ,uDAAd;AACA,UAAKU,uBAAL,GAA+B,MAAKA,uBAAL,CAA6BV,IAA7B,uDAA/B;AACA,UAAKW,eAAL,GAAuB,MAAKA,eAAL,CAAqBX,IAArB,uDAAvB;AACA,UAAKY,WAAL,GAAmB,MAAKA,WAAL,CAAiBZ,IAAjB,uDAAnB;AAvBiB;AAwBlB;;;;wCAEmB;AAClB;AACA,UAAMa,MAAM,GAAGhC,WAAW,CAACiC,KAAZ,CAAkB,KAAKpB,KAAL,CAAWqB,QAAX,CAAoBC,MAAtC,CAAf;;AACA,UAAIH,MAAM,CAACI,IAAX,EAAiB;AACf,aAAKC,QAAL,CAAc;AACZtB,UAAAA,UAAU,EAAEiB,MAAM,CAACI;AADP,SAAd;AAGD;;AACD,WAAKvB,KAAL,CAAWyB,WAAX,CAAuBnC,SAAvB,CAAiC6B,MAAjC;AACD;;;uCAEkBO,S,EAAW;AAC5B,UAAI,KAAK1B,KAAL,CAAW2B,KAAX,KAAqBD,SAAS,CAACC,KAA/B,IAAwC,KAAK3B,KAAL,CAAW2B,KAAX,KAAqB,IAAjE,EAAuE;AACrE,YAAIC,GAAG,GAAGlC,QAAQ,CAAC,KAAKM,KAAL,CAAW2B,KAAZ,CAAlB;AACAzD,QAAAA,MAAM,CAACyD,KAAP,CAAaC,GAAG,CAACC,KAAjB,EAAwBD,GAAG,CAACE,OAA5B;AACD;;AAED,UACE,KAAK9B,KAAL,CAAW+B,OAAX,KAAuBL,SAAS,CAACK,OAAjC,IACA,KAAK/B,KAAL,CAAW+B,OAAX,KAAuB,IAFzB,EAGE;AACA7D,QAAAA,MAAM,CAAC6D,OAAP,CAAe,SAAf,EAA0B,KAAK/B,KAAL,CAAW8B,OAArC;AACD,OAX2B,CAa5B;;;AACA,UAAIJ,SAAS,CAACL,QAAV,CAAmBC,MAAnB,KAA8B,KAAKtB,KAAL,CAAWqB,QAAX,CAAoBC,MAAtD,EAA8D;AAC5D,YAAMH,MAAM,GAAGhC,WAAW,CAACiC,KAAZ,CAAkB,KAAKpB,KAAL,CAAWqB,QAAX,CAAoBC,MAAtC,CAAf;;AACA,YAAIH,MAAM,CAACI,IAAX,EAAiB;AACf,eAAKC,QAAL,CAAc;AACZtB,YAAAA,UAAU,EAAEiB,MAAM,CAACI;AADP,WAAd;AAIA,eAAKvB,KAAL,CAAWyB,WAAX,CAAuBnC,SAAvB,CAAiC6B,MAAjC;AACD;AACF;AACF;;;mCAEca,C,EAAG;AAChB,WAAK5B,MAAL,qBACK,KAAKA,MADV,sBAEG4B,CAAC,CAACC,MAAF,CAASC,IAFZ,EAEmBF,CAAC,CAACC,MAAF,CAASE,KAF5B;AAID;;;oCAEe;AACdxC,MAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACD;;;qCAEgBQ,Q,EAAU;AACzB,WAAKqB,QAAL,CAAc;AACZrB,QAAAA,QAAQ,EAARA;AADY,OAAd;AAGD;;;uCAEkBiC,Y,EAAc;AAC/B,UAAIC,MAAM,GAAGlD,WAAW,CAACiC,KAAZ,CAAkB,KAAKpB,KAAL,CAAWqB,QAAX,CAAoBC,MAAtC,CAAb;AACAe,MAAAA,MAAM,qBACDA,MADC;AAEJd,QAAAA,IAAI,EAAEa;AAFF,QAAN;AAKA,UAAME,WAAW,GAAGnD,WAAW,CAACoD,SAAZ,CAAsBF,MAAtB,CAApB;AACA,WAAKrC,KAAL,CAAWwC,OAAX,CAAmBC,IAAnB,CAAwB;AACtBC,QAAAA,QAAQ,EAAE,KAAK1C,KAAL,CAAWqB,QAAX,CAAoBqB,QADR;AAEtBpB,QAAAA,MAAM,aAAMgB,WAAN;AAFgB,OAAxB;AAID;;;2BAEMK,I,EAAMX,C,EAAG;AACdA,MAAAA,CAAC,CAACY,eAAF;AACA,WAAK5C,KAAL,CAAW6C,YAAX,CAAwBpD,SAAxB,CAAkC,iBAAlC,EAAqDkD,IAArD;AACD,K,CAED;;;;6BACSG,E,EAAId,C,EAAG;AAAA;;AACdA,MAAAA,CAAC,CAACY,eAAF;AACAxE,MAAAA,IAAI,CAAC;AACHyD,QAAAA,KAAK,EAAE,eADJ;AAEHkB,QAAAA,IAAI,EAAE,mCAFH;AAGHC,QAAAA,IAAI,EAAE,SAHH;AAIHC,QAAAA,gBAAgB,EAAE,IAJf;AAKHC,QAAAA,kBAAkB,EAAE,SALjB;AAMHC,QAAAA,iBAAiB,EAAE,MANhB;AAOHC,QAAAA,iBAAiB,EAAE;AAPhB,OAAD,CAAJ,CAQGC,IARH,CAQQ,UAAAC,MAAM,EAAI;AAChB,YAAIA,MAAM,CAACnB,KAAX,EAAkB;AAChB,UAAA,MAAI,CAACnC,KAAL,CAAWyB,WAAX,CAAuBlC,UAAvB,CAAkCuD,EAAlC;AACD;AACF,OAZD;AAaD;;;8CAEyB;AACxB,WAAKS,WAAL,CAAiBC,KAAjB;AACD;;;oCAEeC,K,EAAO;AAAA;;AACrB,UAAIC,IAAI,GAAGD,KAAK,CAACxB,MAAN,CAAa0B,KAAb,CAAmB,CAAnB,CAAX;;AACA,UAAGD,IAAI,KAAKE,SAAZ,EAAsB;AACpB;AACD;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,UAAMK,QAAQ,GAAGL,IAAI,CAACxB,IAAtB;;AACA,UAAG6B,QAAQ,CAACC,MAAT,CAAgBD,QAAQ,CAACE,MAAT,GAAkB,CAAlC,EAAqC,CAArC,MAA4C,MAA/C,EAAsD;AACpD/F,QAAAA,MAAM,CAACgG,OAAP,CAAe,SAAf,EAA0B,yBAA1B;AACA;AACD;;AACD,UAAMC,UAAU,GAAG,IAAIC,UAAJ,EAAnB;AACA,UAAMC,MAAM,GAAG,EAAf;;AACAF,MAAAA,UAAU,CAACG,MAAX,GAAoB,YAAM;AACxB,YAAMnD,MAAM,GAAGhC,WAAW,CAACiC,KAAZ,CAAkB,MAAI,CAACpB,KAAL,CAAWqB,QAAX,CAAoBC,MAAtC,CAAf;AACAhD,QAAAA,QAAQ,CAAC6F,UAAU,CAACb,MAAZ,EAAoB,EAApB,CAAR,CACGiB,EADH,CACM,UADN,EACkB,YAAW;AACzB,cAAIC,MAAJ;;AACA,iBAAQA,MAAM,GAAG,KAAKC,IAAL,EAAjB,EAA+B;AAC7B,gBAAIC,IAAI,GAAG,EAAX;;AACA,gBAAGF,MAAM,CAAC,CAAD,CAAN,KAAc,EAAjB,EAAoB;AAClBE,cAAAA,IAAI,CAAC,YAAD,CAAJ,GAAqBnG,MAAM,GAAGoG,MAAT,CAAgB,qBAAhB,CAArB;AACAD,cAAAA,IAAI,CAAC,YAAD,CAAJ,GAAqBnG,MAAM,GAAGoG,MAAT,CAAgB,qBAAhB,CAArB;AACAD,cAAAA,IAAI,CAAC,IAAD,CAAJ,GAAaF,MAAM,CAAC,CAAD,CAAnB;AACAE,cAAAA,IAAI,CAAC,MAAD,CAAJ,GAAeF,MAAM,CAAC,CAAD,CAArB;AACAE,cAAAA,IAAI,CAAC,OAAD,CAAJ,GAAgBF,MAAM,CAAC,CAAD,CAAtB;AACAE,cAAAA,IAAI,CAAC,WAAD,CAAJ,GAAoBF,MAAM,CAAC,CAAD,CAA1B;AACAE,cAAAA,IAAI,CAAC,SAAD,CAAJ,GAAkBF,MAAM,CAAC,CAAD,CAAxB;AACAE,cAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiBF,MAAM,CAAC,CAAD,CAAvB;AACAH,cAAAA,MAAM,CAAC5B,IAAP,CAAYiC,IAAZ;AACD;AACF;AACF,SAjBH,EAkBGH,EAlBH,CAkBM,KAlBN,EAkBa,YAAM;AACfV,UAAAA,OAAO,CAACC,GAAR,CAAYO,MAAM,CAAC,CAAD,CAAlB;;AACA,cAAGA,MAAM,CAAC,CAAD,CAAN,CAAU,IAAV,KAAmB,SAAtB,EAAgC;AAC9BnG,YAAAA,MAAM,CAACgG,OAAP,CAAe,SAAf,EAA0B,kCAA1B;AACA;AACD;;AACDG,UAAAA,MAAM,CAACO,MAAP,CAAc,CAAd,EAAiB,CAAjB;AACAf,UAAAA,OAAO,CAACC,GAAR,CAAYO,MAAZ;;AACA,cAAGA,MAAM,CAACJ,MAAP,KAAkB,CAArB,EAAuB;AACrB/F,YAAAA,MAAM,CAACgG,OAAP,CAAe,SAAf,EAA0B,uBAA1B;AACA;AACD,WAHD,MAGM;AACJ,YAAA,MAAI,CAAClE,KAAL,CAAWyB,WAAX,CAAuBjC,SAAvB,CAAiC6E,MAAjC,EAAyClD,MAAzC;AACD;AACF,SAhCH;AAiCD,OAnCD;;AAoCAgD,MAAAA,UAAU,CAACU,UAAX,CAAsBnB,IAAtB,EAA4B,OAA5B;AACD;;;gCAEWoB,G,EAAKf,Q,EAAU;AACvB,UAAIgB,OAAJ;AACA,UAAIC,YAAJ,CAFuB,CAGvB;;AACAD,MAAAA,OAAO,GAAG,IAAIE,IAAJ,CAAS,CAAC,WAASH,GAAV,CAAT,EAAyB;AAAC9B,QAAAA,IAAI,EAAE;AAAP,OAAzB,CAAV,CAJuB,CAKvB;;AACAgC,MAAAA,YAAY,GAAGE,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAf,CANuB,CAOvB;;AACAH,MAAAA,YAAY,CAACI,QAAb,GAAwBrB,QAAxB,CARuB,CASvB;;AACAiB,MAAAA,YAAY,CAACK,IAAb,GAAoBC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BT,OAA3B,CAApB,CAVuB,CAWvB;;AACAC,MAAAA,YAAY,CAACS,KAAb,CAAmBC,OAAnB,GAA6B,MAA7B,CAZuB,CAavB;;AACAR,MAAAA,QAAQ,CAACS,IAAT,CAAcC,WAAd,CAA0BZ,YAA1B,EAduB,CAevB;;AACAA,MAAAA,YAAY,CAACxB,KAAb;AACH;;;qCAEgBO,Q,EAAU;AACvB,UAAIe,GAAG,GAAG,EAAV;AACA,UAAIe,IAAI,GAAGX,QAAQ,CAACY,gBAAT,CAA0B,UAA1B,CAAX;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAAC5B,MAAzB,EAAiC8B,CAAC,EAAlC,EAAsC;AAClC,YAAIC,GAAG,GAAG,EAAV;AAAA,YAAcC,IAAI,GAAGJ,IAAI,CAACE,CAAD,CAAJ,CAAQD,gBAAR,CAAyB,QAAzB,CAArB;;AACA,YAAGC,CAAC,KAAK,CAAT,EAAW;AACTC,UAAAA,GAAG,GAAG,CAAC,SAAD,EAAY,MAAZ,EAAoB,OAApB,EAA6B,WAA7B,EAA0C,eAA1C,EAA2D,YAA3D,CAAN;AACD,SAFD,MAEM;AACJA,UAAAA,GAAG,CAACvD,IAAJ,CAASwD,IAAI,CAAC,CAAD,CAAJ,CAAQC,UAAR,CAAmB,CAAnB,EAAsB/D,KAA/B;AACA6D,UAAAA,GAAG,CAACvD,IAAJ,CAASwD,IAAI,CAAC,CAAD,CAAJ,CAAQE,SAAjB;AACAH,UAAAA,GAAG,CAACvD,IAAJ,CAASwD,IAAI,CAAC,CAAD,CAAJ,CAAQE,SAAjB;;AACA,cAAGF,IAAI,CAAC,CAAD,CAAJ,CAAQC,UAAR,CAAmB,CAAnB,CAAH,EAAyB;AACvBF,YAAAA,GAAG,CAACvD,IAAJ,CAASwD,IAAI,CAAC,CAAD,CAAJ,CAAQC,UAAR,CAAmB,CAAnB,EAAsB/D,KAA/B,EADuB,CACgB;AACxC,WAFD,MAEM;AACJ6D,YAAAA,GAAG,CAACvD,IAAJ,CAAS,EAAT;AACD;;AACD,cAAGwD,IAAI,CAAC,CAAD,CAAJ,CAAQE,SAAR,KAAsB,QAAzB,EAAkC;AAChCH,YAAAA,GAAG,CAACvD,IAAJ,CAAS,GAAT;AACD,WAFD,MAEM;AACJuD,YAAAA,GAAG,CAACvD,IAAJ,CAAS,GAAT;AACD;;AACDuD,UAAAA,GAAG,CAACvD,IAAJ,CAAS,EAAT;AACD;;AACDqC,QAAAA,GAAG,CAACrC,IAAJ,CAASuD,GAAG,CAACI,IAAJ,CAAS,GAAT,CAAT;AACH,OAxBsB,CAyBvB;;;AACA,WAAKC,WAAL,CAAiBvB,GAAG,CAACsB,IAAJ,CAAS,IAAT,CAAjB,EAAiCrC,QAAjC;AACH;;;kCAEY;AACX,WAAKvC,QAAL,CAAc;AAACrB,QAAAA,QAAQ,EAAEL;AAAX,OAAd;AACA,UAAIwG,IAAI,GAAG,IAAX;AACAC,MAAAA,UAAU,CAAC,YAAU;AACnBD,QAAAA,IAAI,CAACE,gBAAL,CAAsB,UAAtB;AACD,OAFS,EAEP,GAFO,CAAV;AAGD;;;wCAEmB;AAAA;;AAClB,UAAI,KAAKxG,KAAL,CAAWyG,MAAf,EAAuB;AAAA,YACbC,IADa,GACJ,KAAK1G,KAAL,CAAWyG,MADP,CACbC,IADa;;AAErB,YAAIA,IAAI,IAAIA,IAAI,CAACzC,MAAL,GAAc,CAA1B,EAA6B;AAC3B,cAAM0C,aAAa,GAAGD,IAAI,CAACE,GAAL,CAAS,UAACjE,IAAD,EAAOkE,KAAP;AAAA,mBAC7B;AAAI,cAAA,GAAG,EAAElE,IAAI,CAACG,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE;AAAI,cAAA,KAAK,EAAC,KAAV;AAAgB,cAAA,OAAO,EAAEH,IAAI,CAACG,EAA9B;AAAkC,cAAA,UAAU,EAAEH,IAAI,CAACmE,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgED,KAAK,GAAG,CAAxE,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,oBAAC,IAAD;AACE,cAAA,EAAE,EAAE;AACFnE,gBAAAA,QAAQ,EAAE,cADR;AAEFpB,gBAAAA,MAAM,kBAAWqB,IAAI,CAACG,EAAhB;AAFJ,eADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAMGH,IAAI,CAACT,IANR,CADF,CAFF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAKS,IAAI,CAACoE,OAAL,GAAe,QAAf,GAA0B,QAA/B,CAZF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAKpE,IAAI,CAACqE,KAAV,CAbF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,oBAAC,MAAD;AACE,cAAA,KAAK,EAAC,SADR;AAEE,cAAA,OAAO,EAAE,iBAAAhF,CAAC,EAAI;AACZ,gBAAA,MAAI,CAACjB,MAAL,CAAY4B,IAAZ,EAAkBX,CAAlB;AACD,eAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAME;AAAG,cAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,CADF,EASE,oBAAC,MAAD;AACE,cAAA,KAAK,EAAC,QADR;AAEE,cAAA,OAAO,EAAE,iBAAAA,CAAC,EAAI;AACZ,gBAAA,MAAI,CAAClB,QAAL,CAAc6B,IAAI,CAACG,EAAnB,EAAuBd,CAAvB;AACD,eAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAME;AAAG,cAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,CATF,CAdF,CAD6B;AAAA,WAAT,CAAtB;AAoCA,iBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,KAAD;AAAO,YAAA,OAAO,MAAd;AAAe,YAAA,QAAQ,MAAvB;AAAwB,YAAA,UAAU,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALF,CADF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAQ2E,aAAR,CAVF,CADF,CADF;AAgBD,SArDD,MAqDO;AACL,iBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAP;AACD;AACF;AACF;;;uCAEkB;AAAA;;AACjB,UAAI,KAAK3G,KAAL,CAAWyG,MAAf,EAAuB;AAAA,YACbC,IADa,GACJ,KAAK1G,KAAL,CAAWyG,MADP,CACbC,IADa;;AAGrB,YAAIA,IAAI,IAAIA,IAAI,CAACzC,MAAL,GAAc,CAA1B,EAA6B;AAC3B,iBAAOyC,IAAI,CAACE,GAAL,CAAS,UAACjE,IAAD,EAAOkE,KAAP,EAAiB;AAC/B,gBAAII,QAAQ,GAAG,EAAf;;AACA,gBAAI,CAACtE,IAAI,CAACoE,OAAV,EAAmB;AACjBE,cAAAA,QAAQ,GAAG,UAAX;AACD;;AAED,gBAAIH,SAAS,GAAGnE,IAAI,CAACmE,SAArB;;AACA,gBAAInE,IAAI,CAACmE,SAAL,KAAmB,IAAvB,EAA4B;AAC1BA,cAAAA,SAAS,GAAG,yCAAZ;AACD;;AACD,gBAAInE,IAAI,CAACmE,SAAL,KAAmB,IAAnB,IAA2BnE,IAAI,CAACmE,SAAL,CAAeI,SAAf,CAAyB,CAAzB,EAA4B,CAA5B,MAAmC,MAAlE,EAA0E;AACxEJ,cAAAA,SAAS,GAAGlH,QAAQ,CAACuH,QAAT,GAAoBL,SAAhC;AACD;;AACD,mBACE;AACE,cAAA,GAAG,EAAED,KADP;AAEE,cAAA,SAAS,EAAC,6DAFZ;AAGE,cAAA,OAAO,EAAE,mBAAM;AACb,gBAAA,MAAI,CAAC7G,KAAL,CAAWwC,OAAX,CAAmBC,IAAnB,6BAA6CE,IAAI,CAACG,EAAlD;AACD,eALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAOE,oBAAC,IAAD;AAAM,cAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,oBAAC,OAAD;AACE,cAAA,GAAG,MADL;AAEE,cAAA,KAAK,EAAC,MAFR;AAGE,cAAA,MAAM,EAAC,OAHT;AAIE,cAAA,SAAS,EAAC,iBAJZ;AAKE,cAAA,GAAG,EAAEgE,SALP;AAME,cAAA,GAAG,EAAEnE,IAAI,CAACT,IANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EASE;AAAK,cAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,EAUE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,oBAAC,SAAD;AAAW,cAAA,SAAS,EAAC,sBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACGS,IAAI,CAACT,IAAL,GAAY+E,QADf,CADF,EAIE,oBAAC,QAAD;AAAU,cAAA,SAAS,EAAC,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACGtE,IAAI,CAACG,EADR,CAJF,EAOE;AAAK,cAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,oBAAC,MAAD;AACE,cAAA,IAAI,EAAC,IADP;AAEE,cAAA,KAAK,EAAC,SAFR;AAGE,cAAA,OAAO,EAAE,iBAAAd,CAAC,EAAI;AACZ,gBAAA,MAAI,CAACjB,MAAL,CAAY4B,IAAZ,EAAkBX,CAAlB;AACD,eALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAOE;AAAG,cAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CADF,EAUE,oBAAC,MAAD;AACE,cAAA,IAAI,EAAC,IADP;AAEE,cAAA,KAAK,EAAC,QAFR;AAGE,cAAA,OAAO,EAAE,iBAAAA,CAAC,EAAI;AACZ,gBAAA,MAAI,CAAClB,QAAL,CAAc6B,IAAI,CAACG,EAAnB,EAAuBd,CAAvB;AACD,eALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAOE;AAAG,cAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CAVF,CAPF,CAVF,CAPF,CADF;AAiDD,WA9DM,CAAP;AA+DD,SAhED,MAgEO;AACL,iBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAP;AACD;AACF;AACF;;;uCAEkB;AACjB,UACE,KAAKhC,KAAL,CAAWyG,MAAX,IACA,KAAKzG,KAAL,CAAWyG,MAAX,CAAkBW,IADlB,IAEA,KAAKpH,KAAL,CAAWyG,MAAX,CAAkBC,IAFlB,IAGA,KAAK1G,KAAL,CAAWyG,MAAX,CAAkBC,IAAlB,CAAuBzC,MAAvB,GAAgC,CAJlC,EAKE;AACA,eACE,oBAAC,UAAD;AACE,UAAA,UAAU,EAAE,KAAKjE,KAAL,CAAWyG,MAAX,CAAkBW,IAAlB,CAAuBC,KADrC;AAEE,UAAA,QAAQ,EAAEC,QAAQ,CAAC,KAAKtH,KAAL,CAAWyG,MAAX,CAAkBW,IAAlB,CAAuBG,QAAxB,CAFpB;AAGE,UAAA,QAAQ,EAAE,KAAK7G,kBAHjB;AAIE,UAAA,UAAU,EAAE4G,QAAQ,CAAC,KAAKrH,KAAL,CAAWC,UAAZ,CAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;AACF;;;mCAEc;AAAA;;AACb,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAC,SADR;AAEE,QAAA,OAAO,EAAE,mBAAM;AACb,UAAA,MAAI,CAACF,KAAL,CAAW6C,YAAX,CAAwBpD,SAAxB,CAAkC,gBAAlC;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,iBAFF,EAYE,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,aAAX;AAAyB,QAAA,KAAK,EAAC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEE;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAZF,EAgBE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAE;AAAEiG,UAAAA,OAAO,EAAE;AAAX,SAFT;AAGE,QAAA,QAAQ,EAAE,KAAKzE,eAHjB;AAIE,QAAA,OAAO,EAAE,iBAACe,CAAD;AAAA,iBAAOA,CAAC,CAACC,MAAF,CAASE,KAAT,GAAiB,IAAxB;AAAA,SAJX;AAKE,QAAA,GAAG,EAAE,aAAAqF,IAAG,EAAI;AACV,UAAA,MAAI,CAACjE,WAAL,GAAmBiE,IAAnB;AACD,SAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBF,EAyBE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAE,KAAKxG,uBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,qBAzBF,EA6BE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAC,SADR;AAEE,QAAA,OAAO,EAAE,KAAKE,WAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAG,QAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,mBA7BF,sBAqCE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACL,gBAAL,CAAsBhB,cAAtB,CAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CArCF,EAwCE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACgB,gBAAL,CAAsBf,eAAtB,CAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAxCF,EA2CE,oBAAC,oBAAD;AACE,QAAA,OAAO,EAAC,cADV;AAEE,QAAA,SAAS,EAAC,8BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,WAFP;AAGE,QAAA,QAAQ,EAAE,KAAKa,cAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAJF,EAYE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,WAZF,CA3CF,CADF;AA+DD;;;6BACQ;AAAA,wBACsB,KAAKZ,KAD3B;AAAA,UACCyH,OADD,eACCA,OADD;AAAA,UACU3F,OADV,eACUA,OADV,EAGP;;AACA,UAAI2F,OAAJ,EAAa;AACXrJ,QAAAA,IAAI,CAAC;AACHyD,UAAAA,KAAK,EAAE,gBADJ;AAEHkB,UAAAA,IAAI,EAAEjB,OAFH;AAGH4F,UAAAA,MAAM,EAAE,kBAAM;AACZtJ,YAAAA,IAAI,CAACuJ,WAAL;AACD,WALE;AAMHC,UAAAA,iBAAiB,EAAE,KANhB;AAOHC,UAAAA,cAAc,EAAE,KAPb;AAQHC,UAAAA,aAAa,EAAE;AARZ,SAAD,CAAJ;AAUD,OAXD,MAWO;AACL1J,QAAAA,IAAI,CAAC2J,KAAL;AACD;;AAED,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEG,KAAKvH,YAAL,EAFH,CAHF,EAQE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEG,KAAKP,KAAL,CAAWE,QAAX,KAAwBL,eAAxB,GACC,KAAKO,iBAAL,EADD,GAGC;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsB,KAAKE,gBAAL,EAAtB,CALJ,EAQG,KAAKE,gBAAL,EARH,CARF,CADF;AAqBD;;;;EAzegB1C,KAAK,CAACiK,S;;AA4ezBjI,IAAI,GAAG1B,UAAU,CAAC0B,IAAD,CAAjB;AAEA,eAAe/B,OAAO,CACpB,UAAAiC,KAAK;AAAA,2BACAA,KAAK,CAACgI,OAAN,CAAcC,QAAd,CAAuBvF,IADvB;AAAA,CADe,EAIpB,UAAAwF,QAAQ;AAAA,SAAK;AACX1G,IAAAA,WAAW,EAAExD,kBAAkB,CAC7B;AAAEuB,MAAAA,SAAS,EAATA,SAAF;AAAaF,MAAAA,SAAS,EAATA,SAAb;AAAwBC,MAAAA,UAAU,EAAVA;AAAxB,KAD6B,EAE7B4I,QAF6B,CADpB;AAKXtF,IAAAA,YAAY,EAAE5E,kBAAkB,CAAC;AAAEwB,MAAAA,SAAS,EAATA;AAAF,KAAD,EAAgB0I,QAAhB;AALrB,GAAL;AAAA,CAJY,CAAP,CAWbpI,IAXa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { toastr } from 'react-redux-toastr';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { withRouter } from 'react-router-dom';\nimport CSVParse from 'csv-parse';\nimport moment from 'moment';\n\nimport {\n  Button,\n  FormGroup,\n  Label,\n  Input,\n  UncontrolledCollapse,\n  Card,\n  CardImg,\n  CardTitle,\n  CardText,\n  CardImgOverlay,\n  Table\n} from 'reactstrap';\nimport queryString from 'query-string';\nimport { csv2array } from 'services/utils';\n// Import Components\nimport { Pagination } from 'components';\n\n// Import actions\nimport { getCities, deleteCity, addCities } from 'services/city/cityActions';\nimport { showModal } from 'modals/modalConductorActions';\n\n// Import Utility functions\nimport { errorMsg, updateSearchQueryInUrl } from 'services/utils';\n\n// Import settings\nimport settings from 'config/settings';\n\nconst VIEW_MODE_TILE = 'VIEW_MODE_TILE';\nconst VIEW_MODE_TABLE = 'VIEW_MODE_TABLE';\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activePage: 1, // Handle pagination active\n      viewMode: VIEW_MODE_TILE\n    };\n\n    this.filter = {};\n\n    this.renderCitiesTable = this.renderCitiesTable.bind(this);\n    this.renderCitiesTile = this.renderCitiesTile.bind(this);\n    this.renderFilter = this.renderFilter.bind(this);\n    this.renderPagination = this.renderPagination.bind(this);\n\n    this.onPaginationSelect = this.onPaginationSelect.bind(this);\n    this.onFilterChange = this.onFilterChange.bind(this);\n    this.onSearchClick = this.onSearchClick.bind(this);\n    this.onViewModeChange = this.onViewModeChange.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.onEdit = this.onEdit.bind(this);\n    this.onClickAddCityFromExcel = this.onClickAddCityFromExcel.bind(this);\n    this.onChangeCSVFile = this.onChangeCSVFile.bind(this);\n    this.onExportCSV = this.onExportCSV.bind(this);\n  }\n\n  componentDidMount() {\n    // Parse query string and send endpoint call\n    const params = queryString.parse(this.props.location.search);\n    if (params.page) {\n      this.setState({\n        activePage: params.page\n      });\n    }\n    this.props.cityActions.getCities(params);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.error !== prevProps.error && this.props.error !== null) {\n      let msg = errorMsg(this.props.error);\n      toastr.error(msg.title, msg.message);\n    }\n\n    if (\n      this.props.success !== prevProps.success &&\n      this.props.success === true\n    ) {\n      toastr.success('Success', this.props.message);\n    }\n\n    // If query param is changed\n    if (prevProps.location.search !== this.props.location.search) {\n      const params = queryString.parse(this.props.location.search);\n      if (params.page) {\n        this.setState({\n          activePage: params.page\n        });\n\n        this.props.cityActions.getCities(params);\n      }\n    }\n  }\n\n  onFilterChange(e) {\n    this.filter = {\n      ...this.filter,\n      [e.target.name]: e.target.value\n    };\n  }\n\n  onSearchClick() {\n    updateSearchQueryInUrl(this);\n  }\n\n  onViewModeChange(viewMode) {\n    this.setState({\n      viewMode\n    });\n  }\n\n  onPaginationSelect(selectedPage) {\n    let values = queryString.parse(this.props.location.search);\n    values = {\n      ...values,\n      page: selectedPage\n    };\n\n    const searchQuery = queryString.stringify(values);\n    this.props.history.push({\n      pathname: this.props.location.pathname,\n      search: `?${searchQuery}`\n    });\n  }\n\n  onEdit(city, e) {\n    e.stopPropagation();\n    this.props.modalActions.showModal('EDIT_CITY_MODAL', city);\n  }\n\n  /// Handle delete button click event\n  onDelete(id, e) {\n    e.stopPropagation();\n    Swal({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then(result => {\n      if (result.value) {\n        this.props.cityActions.deleteCity(id);\n      }\n    });\n  }\n\n  onClickAddCityFromExcel() {\n    this.csvUploader.click();\n  }\n\n  onChangeCSVFile(event) {\n    let file = event.target.files[0];\n    if(file === undefined){\n      return;\n    }\n    console.log(file);\n    const filename = file.name;\n    if(filename.substr(filename.length - 4, 4) !== \".csv\"){\n      toastr.warning('Warning', \"Please select .csv file\");\n      return;\n    }\n    const fileReader = new FileReader();\n    const output = [];\n    fileReader.onload = () => {\n      const params = queryString.parse(this.props.location.search);\n      CSVParse(fileReader.result, {})\n        .on('readable', function() {\n          let record;\n          while ((record = this.read())) {\n            let item = {};\n            if(record[5] !== ''){\n              item['created_at'] = moment().format('YYYY-MM-DD HH:mm:ss');\n              item['updated_at'] = moment().format('YYYY-MM-DD HH:mm:ss');\n              item['id'] = record[0];\n              item['name'] = record[1];\n              item['order'] = record[2];\n              item['image_url'] = record[3];\n              item['is_open'] = record[4];\n              item['action'] = record[5];\n              output.push(item);\n            }\n          }\n        })\n        .on('end', () => {\n          console.log(output[0])\n          if(output[0]['id'] != \"City_Id\"){\n            toastr.warning('Warning', \"Please select file for City data\");\n            return;\n          }\n          output.splice(0, 1);\n          console.log(output);\n          if(output.length === 0){\n            toastr.warning('Warning', \"No operations in file\");\n            return;\n          } else{\n            this.props.cityActions.addCities(output, params);\n          }\n        });\n    };\n    fileReader.readAsText(file, \"UTF-8\");\n  }\n\n  downloadCSV(csv, filename) {\n      var csvFile;\n      var downloadLink;\n      // CSV file\n      csvFile = new Blob([\"\\ufeff\"+csv], {type: \"text/csv;charset=UTF-8\"});\n      // Download link\n      downloadLink = document.createElement(\"a\");\n      // File name\n      downloadLink.download = filename;\n      // Create a link to the file\n      downloadLink.href = window.URL.createObjectURL(csvFile);\n      // Hide download link\n      downloadLink.style.display = \"none\";\n      // Add the link to DOM\n      document.body.appendChild(downloadLink);\n      // Click download link\n      downloadLink.click();\n  }\n\n  exportTableToCSV(filename) {\n      var csv = [];\n      var rows = document.querySelectorAll(\"table tr\");\n      for (var i = 0; i < rows.length; i++) {\n          var row = [], cols = rows[i].querySelectorAll(\"td, th\");\n          if(i === 0){\n            row = ['City_Id', 'Name', 'Order', 'Image Url', 'Opened/Closed', 'Act(i/u/d)'];\n          } else{\n            row.push(cols[0].attributes[1].value);\n            row.push(cols[1].innerText);\n            row.push(cols[3].innerText);\n            if(cols[0].attributes[2]){\n              row.push(cols[0].attributes[2].value); // Image Url\n            } else{\n              row.push(\"\");\n            }\n            if(cols[2].innerText === 'Opened'){\n              row.push('1');\n            } else{\n              row.push('0');\n            }\n            row.push(\"\");\n          }\n          csv.push(row.join(\",\"));\n      }\n      // Download CSV file\n      this.downloadCSV(csv.join(\"\\n\"), filename);\n  }\n\n  onExportCSV(){\n    this.setState({viewMode: VIEW_MODE_TABLE});\n    let self = this;\n    setTimeout(function(){\n      self.exportTableToCSV(\"City.csv\");\n    }, 500);\n  }\n\n  renderCitiesTable() {\n    if (this.props.cities) {\n      const { data } = this.props.cities;\n      if (data && data.length > 0) {\n        const cityTableRows = data.map((city, index) => (\n          <tr key={city.id}>\n            <th scope=\"row\" data_id={city.id} data_image={city.image_url}> {index + 1} </th>\n            <th>\n              <Link\n                to={{\n                  pathname: '/restaurants',\n                  search: `?city=${city.id}`\n                }}\n              >\n                {city.name}\n              </Link>\n            </th>\n            <th>{city.is_open ? 'Opened' : 'Closed'}</th>\n            <th>{city.order}</th>\n            <th>\n              <Button\n                color=\"warning\"\n                onClick={e => {\n                  this.onEdit(city, e);\n                }}\n              >\n                <i className=\"fa fa-edit\" />\n              </Button>\n              <Button\n                color=\"danger\"\n                onClick={e => {\n                  this.onDelete(city.id, e);\n                }}\n              >\n                <i className=\"fa fa-trash\" />\n              </Button>\n            </th>\n          </tr>\n        ));\n\n        return (\n          <div>\n            <Table striped bordered responsive>\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Name</th>\n                  <th>Open</th>\n                  <th>Order</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>{cityTableRows}</tbody>\n            </Table>\n          </div>\n        );\n      } else {\n        return <div>No City Data to list</div>;\n      }\n    }\n  }\n\n  renderCitiesTile() {\n    if (this.props.cities) {\n      const { data } = this.props.cities;\n\n      if (data && data.length > 0) {\n        return data.map((city, index) => {\n          let closedSz = '';\n          if (!city.is_open) {\n            closedSz = '(Closed)';\n          }\n\n          let image_url = city.image_url;\n          if (city.image_url === null){\n            image_url = \"https://loremflickr.com/g/320/240/paris\";\n          }\n          if (city.image_url !== null && city.image_url.substring(0, 4) !== 'http') {\n            image_url = settings.BASE_URL + image_url;\n          }\n          return (\n            <div\n              key={index}\n              className=\"col-lg-3 col-md-6 col-xs-12 mb-3 d-flex align-items-stretch\"\n              onClick={() => {\n                this.props.history.push(`/restaurants?city=${city.id}`);\n              }}\n            >\n              <Card className=\"text-center w-100\">\n                <CardImg\n                  top\n                  width=\"100%\"\n                  height=\"280px\"\n                  className=\"city-image-tile\"\n                  src={image_url}\n                  alt={city.name}\n                />\n                <div className=\"overlay-color\" />\n                <CardImgOverlay>\n                  <CardTitle className=\"tile-view-card-title\">\n                    {city.name + closedSz}\n                  </CardTitle>\n                  <CardText className=\"tile-view-card-id\"> \n                    {city.id} \n                  </CardText>\n                  <div className=\"card-buttons-hover-show\">\n                    <Button\n                      size=\"sm\"\n                      color=\"warning\"\n                      onClick={e => {\n                        this.onEdit(city, e);\n                      }}\n                    >\n                      <i className=\"fa fa-edit\" />\n                    </Button>\n                    <Button\n                      size=\"sm\"\n                      color=\"danger\"\n                      onClick={e => {\n                        this.onDelete(city.id, e);\n                      }}\n                    >\n                      <i className=\"fa fa-trash\" />\n                    </Button>\n                  </div>\n                </CardImgOverlay>\n              </Card>\n            </div>\n          );\n        });\n      } else {\n        return <div>No City Data to list</div>;\n      }\n    }\n  }\n\n  renderPagination() {\n    if (\n      this.props.cities &&\n      this.props.cities.meta &&\n      this.props.cities.data &&\n      this.props.cities.data.length > 0\n    ) {\n      return (\n        <Pagination\n          totalItems={this.props.cities.meta.total}\n          pageSize={parseInt(this.props.cities.meta.per_page)}\n          onSelect={this.onPaginationSelect}\n          activePage={parseInt(this.state.activePage)}\n        />\n      );\n    }\n  }\n\n  renderFilter() {\n    return (\n      <div>\n        {/* Action button */}\n        <Button\n          color=\"default\"\n          onClick={() => {\n            this.props.modalActions.showModal('ADD_CITY_MODAL');\n          }}\n        >\n          <i className=\"fa fa-plus\" />\n          &nbsp;Add city\n        </Button>\n        \n        <Button id=\"toggle_city\" color=\"warning\">\n          Open filter&nbsp;\n          <i className=\"fa fa-filter\" />\n        </Button>\n        <input\n          type=\"file\"\n          style={{ display: 'none' }}\n          onChange={this.onChangeCSVFile}\n          onClick={(e) => e.target.value = null}\n          ref={ref => {\n            this.csvUploader = ref;\n          }}\n        />\n        <Button color=\"default\" onClick={this.onClickAddCityFromExcel}>\n          <i className=\"fa fa-file-excel-o\" />\n          &nbsp;Add from CSV\n        </Button>\n        <Button \n          color=\"default\" \n          onClick={this.onExportCSV}\n        >\n          <i className=\"fa fa-file-excel-o\" />\n          &nbsp;Export csv\n        </Button>\n        &nbsp;&nbsp;&nbsp;&nbsp;\n        <Button onClick={() => this.onViewModeChange(VIEW_MODE_TILE)}>\n          <i className=\"fa fa-th\" />\n        </Button>\n        <Button onClick={() => this.onViewModeChange(VIEW_MODE_TABLE)}>\n          <i className=\"fa fa-th-list\" />\n        </Button>\n        <UncontrolledCollapse\n          toggler=\"#toggle_city\"\n          className=\"col-md-8 col-sm-12 mt-5 mb-5\"\n        >\n          <FormGroup>\n            <Label>City</Label>\n            <Input\n              type=\"text\"\n              name=\"city_name\"\n              onChange={this.onFilterChange}\n            />\n          </FormGroup>\n          <Button onClick={this.onSearchClick}>\n            <i className=\"fa fa-search\" />\n            Search\n          </Button>\n        </UncontrolledCollapse>\n      </div>\n    );\n  }\n  render() {\n    const { loading, message } = this.props;\n\n    /// if loading status show sweet alert\n    if (loading) {\n      Swal({\n        title: 'Please wait...',\n        text: message,\n        onOpen: () => {\n          Swal.showLoading();\n        },\n        allowOutsideClick: false,\n        allowEscapeKey: false,\n        allowEnterKey: false\n      });\n    } else {\n      Swal.close();\n    }\n\n    return (\n      <div>\n        {/* Page title */}\n        <h1 className=\"text-center mb-5\">Cities</h1>\n        <div className=\"mb-3\">\n          {/* Render city filter section */}\n          {this.renderFilter()}\n        </div>\n\n        <div className=\"d-flex flex-column\">\n          {/* Render city table */}\n          {this.state.viewMode === VIEW_MODE_TABLE ? (\n            this.renderCitiesTable()\n          ) : (\n            <div className=\"row\">{this.renderCitiesTile()}</div>\n          )}\n          {/* Render table pagination */}\n          {this.renderPagination()}\n        </div>\n      </div>\n    );\n  }\n}\n\nList = withRouter(List);\n\nexport default connect(\n  state => ({\n    ...state.default.services.city\n  }),\n  dispatch => ({\n    cityActions: bindActionCreators(\n      { addCities, getCities, deleteCity },\n      dispatch\n    ),\n    modalActions: bindActionCreators({ showModal }, dispatch)\n  })\n)(List);\n"]},"metadata":{},"sourceType":"module"}