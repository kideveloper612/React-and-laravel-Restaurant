{"ast":null,"code":"import _defineProperty from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"E:\\\\3-Limyong\\\\front\\\\src\\\\scenes\\\\Home\\\\scenes\\\\MenuItems\\\\scenes\\\\Edit\\\\Edit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { toastr } from 'react-redux-toastr';\nimport Swal from 'sweetalert2'; // Import Components\n\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { ImageUploader } from 'components'; // Import Actions\n\nimport { updateItem, updateCurrentItem, getItem } from 'services/item/itemActions';\nimport { getMenus } from 'services/menu/menuActions'; // Import Utility functions\n\nimport { errorMsg } from 'services/utils'; // Import settings\n\nimport settings from 'config/settings';\n\nvar Edit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Edit, _React$Component);\n\n  function Edit(props) {\n    var _this;\n\n    _classCallCheck(this, Edit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Edit).call(this, props));\n    _this.state = {\n      file: null,\n      file_type: '',\n      file_name: ''\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleOnLoad = _this.handleOnLoad.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Edit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.itemActions.getItem(this.props.match.params.id);\n      this.props.menuActions.getMenus();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.item.error !== prevProps.item.error && this.props.item.error !== null) {\n        var msg = errorMsg(this.props.item.error);\n        toastr.error(msg.title, msg.message);\n      }\n\n      if (this.props.menu.error !== prevProps.menu.error && this.props.menu.error !== null) {\n        var _msg = errorMsg(this.props.menu.error);\n\n        toastr.error(_msg.title, _msg.message);\n      }\n\n      if (this.props.item.success !== prevProps.item.success && this.props.item.success === true) {\n        toastr.success('Success', this.props.item.message);\n      }\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      var item = this.props.item.currentItem;\n\n      switch (e.target.name) {\n        case 'menu':\n          var menus = this.props.menu.menus.data;\n          var menu = menus.find(function (element) {\n            // eslint-disable-next-line\n            return element.id == e.target.value;\n          });\n          item = _objectSpread({}, item, {\n            menu: menu\n          });\n          break;\n\n        case 'price':\n          item = _objectSpread({}, item, _defineProperty({}, e.target.name, e.target.value * settings.INTEGER_PRECISION));\n          break;\n\n        default:\n          item = _objectSpread({}, item, _defineProperty({}, e.target.name, e.target.value));\n          break;\n      }\n\n      this.props.itemActions.updateCurrentItem(item);\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      if (this.props.item.currentItem) {\n        if (this.props.item.currentItem.name === '') {\n          toastr.error('Error', 'Category name can not be an empty value');\n          return;\n        }\n      } else {\n        toastr.error('Error', 'Something went wrong');\n      }\n\n      var item = {\n        name: this.props.item.currentItem.name,\n        id: this.props.item.currentItem.id,\n        menu_id: this.props.item.currentItem.menu.id,\n        price: this.props.item.currentItem.price,\n        order: this.props.item.currentItem.order,\n        file: this.state.file,\n        file_type: this.state.file_type,\n        file_name: this.state.file_name\n      };\n      var params = {\n        id: this.props.match.params.id,\n        item: item\n      };\n      this.props.itemActions.updateItem(_objectSpread({}, params));\n    }\n  }, {\n    key: \"handleOnLoad\",\n    value: function handleOnLoad(file, file_type, file_name) {\n      this.setState({\n        file: file,\n        file_type: file_type,\n        file_name: file_name\n      });\n    }\n  }, {\n    key: \"renderMenuOptions\",\n    value: function renderMenuOptions(menus) {\n      if (menus !== null) {\n        return menus.data.map(function (menu, index) {\n          return React.createElement(\"option\", {\n            key: index,\n            value: menu.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144\n            },\n            __self: this\n          }, menu.name);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$item = this.props.item,\n          loading = _this$props$item.loading,\n          message = _this$props$item.message;\n      var imageUploaderStyle = {\n        position: 'relative',\n        width: '60%',\n        height: 'auto',\n        minHeight: '300px',\n        borderWidth: '2px',\n        borderColor: 'rgb(102, 102, 102)',\n        borderStyle: 'dashed',\n        borderRadius: '5px'\n      };\n\n      if (loading) {\n        Swal({\n          title: 'Please wait...',\n          text: message,\n          onOpen: function onOpen() {\n            Swal.showLoading();\n          },\n          allowOutsideClick: false,\n          allowEscapeKey: false,\n          allowEnterKey: false\n        });\n      } else {\n        Swal.close();\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Item Update\"), React.createElement(Form, {\n        className: \"mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Item Name\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"Item name here\",\n        onChange: this.onChange,\n        value: this.props.item.currentItem ? this.props.item.currentItem.name : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Price\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"price\",\n        id: \"price\",\n        placeholder: \"\",\n        onChange: this.onChange,\n        value: this.props.item.currentItem ? this.props.item.currentItem.price / settings.INTEGER_PRECISION : '0',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Menu\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"menu\",\n        id: \"menu\",\n        value: this.props.item.currentItem ? this.props.item.currentItem.menu.id : '',\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, this.renderMenuOptions(this.props.menu.menus))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"order\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"Order\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"order\",\n        id: \"order\",\n        placeholder: \"Order\",\n        onChange: this.onChange,\n        value: this.props.item.currentItem ? this.props.item.currentItem.order : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"Image\"), React.createElement(ImageUploader, {\n        style: imageUploaderStyle,\n        handleOnLoad: this.handleOnLoad,\n        image: this.props.item.currentItem ? settings.BASE_URL + this.props.item.currentItem.image_url : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      })), React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.handleSubmit,\n        className: \"float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return Edit;\n}(React.Component);\n\nexport default connect(function (state) {\n  return {\n    item: _objectSpread({}, state.default.services.item),\n    menu: _objectSpread({}, state.default.services.menu)\n  };\n}, function (dispatch) {\n  return {\n    itemActions: bindActionCreators({\n      updateItem: updateItem,\n      updateCurrentItem: updateCurrentItem,\n      getItem: getItem\n    }, dispatch),\n    menuActions: bindActionCreators({\n      getMenus: getMenus\n    }, dispatch)\n  };\n})(Edit);","map":{"version":3,"sources":["E:\\3-Limyong\\front\\src\\scenes\\Home\\scenes\\MenuItems\\scenes\\Edit\\Edit.js"],"names":["React","connect","bindActionCreators","toastr","Swal","Button","Form","FormGroup","Label","Input","ImageUploader","updateItem","updateCurrentItem","getItem","getMenus","errorMsg","settings","Edit","props","state","file","file_type","file_name","onChange","bind","handleSubmit","handleOnLoad","itemActions","match","params","id","menuActions","prevProps","item","error","msg","title","message","menu","success","e","currentItem","target","name","menus","data","find","element","value","INTEGER_PRECISION","menu_id","price","order","setState","map","index","loading","imageUploaderStyle","position","width","height","minHeight","borderWidth","borderColor","borderStyle","borderRadius","text","onOpen","showLoading","allowOutsideClick","allowEscapeKey","allowEnterKey","close","renderMenuOptions","BASE_URL","image_url","Component","default","services","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { toastr } from 'react-redux-toastr';\nimport Swal from 'sweetalert2';\n\n// Import Components\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nimport { ImageUploader } from 'components';\n\n// Import Actions\nimport {\n  updateItem,\n  updateCurrentItem,\n  getItem\n} from 'services/item/itemActions';\nimport { getMenus } from 'services/menu/menuActions';\n\n// Import Utility functions\nimport { errorMsg } from 'services/utils';\n\n// Import settings\nimport settings from 'config/settings';\n\nclass Edit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      file: null,\n      file_type: '',\n      file_name: ''\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleOnLoad = this.handleOnLoad.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.itemActions.getItem(this.props.match.params.id);\n    this.props.menuActions.getMenus();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.item.error !== prevProps.item.error &&\n      this.props.item.error !== null\n    ) {\n      let msg = errorMsg(this.props.item.error);\n      toastr.error(msg.title, msg.message);\n    }\n\n    if (\n      this.props.menu.error !== prevProps.menu.error &&\n      this.props.menu.error !== null\n    ) {\n      let msg = errorMsg(this.props.menu.error);\n      toastr.error(msg.title, msg.message);\n    }\n\n    if (\n      this.props.item.success !== prevProps.item.success &&\n      this.props.item.success === true\n    ) {\n      toastr.success('Success', this.props.item.message);\n    }\n  }\n\n  onChange(e) {\n    let item = this.props.item.currentItem;\n\n    switch (e.target.name) {\n      case 'menu':\n        const menus = this.props.menu.menus.data;\n        const menu = menus.find(function(element) {\n          // eslint-disable-next-line\n          return element.id == e.target.value;\n        });\n        item = {\n          ...item,\n          menu\n        };\n        break;\n      case 'price':\n        item = {\n          ...item,\n          [e.target.name]: e.target.value * settings.INTEGER_PRECISION\n        };\n        break;\n      default:\n        item = {\n          ...item,\n          [e.target.name]: e.target.value\n        };\n        break;\n    }\n\n    this.props.itemActions.updateCurrentItem(item);\n  }\n\n  handleSubmit() {\n    if (this.props.item.currentItem) {\n      if (this.props.item.currentItem.name === '') {\n        toastr.error('Error', 'Category name can not be an empty value');\n        return;\n      }\n    } else {\n      toastr.error('Error', 'Something went wrong');\n    }\n\n    const item = {\n      name: this.props.item.currentItem.name,\n      id: this.props.item.currentItem.id,\n      menu_id: this.props.item.currentItem.menu.id,\n      price: this.props.item.currentItem.price,\n      order: this.props.item.currentItem.order,\n      file: this.state.file,\n      file_type: this.state.file_type,\n      file_name: this.state.file_name\n    };\n\n    let params = {\n      id: this.props.match.params.id,\n      item\n    };\n\n    this.props.itemActions.updateItem({ ...params });\n  }\n\n  handleOnLoad(file, file_type, file_name) {\n    this.setState({\n      file,\n      file_type,\n      file_name\n    });\n  }\n\n  renderMenuOptions(menus) {\n    if (menus !== null) {\n      return menus.data.map((menu, index) => {\n        return (\n          <option key={index} value={menu.id}>\n            {menu.name}\n          </option>\n        );\n      });\n    }\n  }\n\n  render() {\n    const { loading, message } = this.props.item;\n\n    const imageUploaderStyle = {\n      position: 'relative',\n      width: '60%',\n      height: 'auto',\n      minHeight: '300px',\n      borderWidth: '2px',\n      borderColor: 'rgb(102, 102, 102)',\n      borderStyle: 'dashed',\n      borderRadius: '5px'\n    };\n\n    if (loading) {\n      Swal({\n        title: 'Please wait...',\n        text: message,\n        onOpen: () => {\n          Swal.showLoading();\n        },\n        allowOutsideClick: false,\n        allowEscapeKey: false,\n        allowEnterKey: false\n      });\n    } else {\n      Swal.close();\n    }\n\n    return (\n      <div>\n        <strong>Item Update</strong>\n        <Form className=\"mt-3\">\n          <FormGroup>\n            <Label for=\"name\">Item Name</Label>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              placeholder=\"Item name here\"\n              onChange={this.onChange}\n              value={\n                this.props.item.currentItem\n                  ? this.props.item.currentItem.name\n                  : ''\n              }\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"price\">Price</Label>\n            <Input\n              type=\"text\"\n              name=\"price\"\n              id=\"price\"\n              placeholder=\"\"\n              onChange={this.onChange}\n              value={\n                this.props.item.currentItem\n                  ? this.props.item.currentItem.price /\n                    settings.INTEGER_PRECISION\n                  : '0'\n              }\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"menu\">Menu</Label>\n            <Input\n              type=\"select\"\n              name=\"menu\"\n              id=\"menu\"\n              value={\n                this.props.item.currentItem\n                  ? this.props.item.currentItem.menu.id\n                  : ''\n              }\n              onChange={this.onChange}\n            >\n              {this.renderMenuOptions(this.props.menu.menus)}\n            </Input>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"order\">Order</Label>\n            <Input\n              type=\"text\"\n              name=\"order\"\n              id=\"order\"\n              placeholder=\"Order\"\n              onChange={this.onChange}\n              value={\n                this.props.item.currentItem\n                  ? this.props.item.currentItem.order\n                  : ''\n              }\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label>Image</Label>\n            <ImageUploader\n              style={imageUploaderStyle}\n              handleOnLoad={this.handleOnLoad}\n              image={\n                this.props.item.currentItem\n                  ? settings.BASE_URL + this.props.item.currentItem.image_url\n                  : ''\n              }\n            />\n          </FormGroup>\n          <Button\n            color=\"primary\"\n            onClick={this.handleSubmit}\n            className=\"float-right\"\n          >\n            Submit\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    item: {\n      ...state.default.services.item\n    },\n    menu: {\n      ...state.default.services.menu\n    }\n  }),\n  dispatch => ({\n    itemActions: bindActionCreators(\n      { updateItem, updateCurrentItem, getItem },\n      dispatch\n    ),\n    menuActions: bindActionCreators({ getMenus }, dispatch)\n  })\n)(Edit);\n"]},"metadata":{},"sourceType":"module"}