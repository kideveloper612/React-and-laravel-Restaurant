{"ast":null,"code":"import _defineProperty from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"E:\\\\3-Limyong\\\\front\\\\src\\\\modals\\\\components\\\\CityEdit\\\\CityEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport queryString from 'query-string';\nimport { withRouter } from 'react-router-dom';\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\nimport Switch from 'react-toggle-switch';\nimport { ImageUploader } from 'components';\nimport settings from 'config/settings';\nimport ModalWrapper from '../ModalWrapper'; // Import Actions\n\nimport { updateCity } from 'services/city/cityActions';\n\nvar CityEdit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CityEdit, _React$Component);\n\n  function CityEdit(props) {\n    var _this;\n\n    _classCallCheck(this, CityEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CityEdit).call(this, props));\n    _this.update_data = _objectSpread({}, props.modal.params);\n    _this.state = {\n      is_open: props.modal.params.is_open\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onLoad = _this.onLoad.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CityEdit, [{\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.update_data = _objectSpread({}, this.update_data, _defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"onLoad\",\n    value: function onLoad(file, file_type, file_name) {\n      this.update_data = _objectSpread({}, this.update_data, {\n        file: file,\n        file_type: file_type,\n        file_name: file_name\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var city = this.props.modal.params;\n      return React.createElement(ModalWrapper, {\n        title: \"Update city\",\n        onOk: function onOk() {\n          var params = queryString.parse(_this2.props.location.search);\n          _this2.update_data = _objectSpread({}, _this2.update_data, {\n            is_open: _this2.state.is_open\n          });\n\n          _this2.props.cityActions.updateCity(_this2.update_data.id, _this2.update_data, params);\n        },\n        okText: \"Update\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Form, {\n        className: \"mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"City name here\",\n        defaultValue: city.name,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"order\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Order\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"order\",\n        id: \"order\",\n        defaultValue: city.order,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"is_open\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Open/Closed\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        id: \"is_open\",\n        onClick: function onClick() {\n          _this2.setState({\n            is_open: ~~!_this2.state.is_open\n          });\n        },\n        on: !!this.state.is_open,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Image\"), React.createElement(ImageUploader, {\n        style: {\n          position: 'relative',\n          width: '100%',\n          height: 'auto',\n          minHeight: '300px',\n          borderWidth: '2px',\n          borderColor: 'rgb(102, 102, 102)',\n          borderStyle: 'dashed',\n          borderRadius: '5px'\n        },\n        handleOnLoad: this.onLoad,\n        image: settings.BASE_URL + this.props.modal.params.image_url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return CityEdit;\n}(React.Component);\n\nCityEdit = withRouter(CityEdit);\nexport default connect(function (state) {\n  return _objectSpread({}, state.default.services.city);\n}, function (dispatch) {\n  return {\n    cityActions: bindActionCreators({\n      updateCity: updateCity\n    }, dispatch)\n  };\n})(CityEdit);","map":{"version":3,"sources":["E:\\3-Limyong\\front\\src\\modals\\components\\CityEdit\\CityEdit.js"],"names":["React","connect","bindActionCreators","queryString","withRouter","Form","FormGroup","Label","Input","Switch","ImageUploader","settings","ModalWrapper","updateCity","CityEdit","props","update_data","modal","params","state","is_open","onChange","bind","onLoad","e","target","name","value","file","file_type","file_name","city","parse","location","search","cityActions","id","order","setState","position","width","height","minHeight","borderWidth","borderColor","borderStyle","borderRadius","BASE_URL","image_url","Component","default","services","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport queryString from 'query-string';\nimport { withRouter } from 'react-router-dom';\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\nimport Switch from 'react-toggle-switch';\nimport { ImageUploader } from 'components';\nimport settings from 'config/settings';\n\nimport ModalWrapper from '../ModalWrapper';\n\n// Import Actions\nimport { updateCity } from 'services/city/cityActions';\n\nclass CityEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.update_data = {\n      ...props.modal.params\n    };\n\n    this.state = {\n      is_open: props.modal.params.is_open\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onLoad = this.onLoad.bind(this);\n  }\n\n  onChange(e) {\n    this.update_data = {\n      ...this.update_data,\n      [e.target.name]: e.target.value\n    };\n  }\n\n  onLoad(file, file_type, file_name) {\n    this.update_data = {\n      ...this.update_data,\n      file,\n      file_type,\n      file_name\n    };\n  }\n\n  render() {\n    const city = this.props.modal.params;\n\n    return (\n      <ModalWrapper\n        title=\"Update city\"\n        onOk={() => {\n          const params = queryString.parse(this.props.location.search);\n          this.update_data = {\n            ...this.update_data,\n            is_open: this.state.is_open\n          };\n\n          this.props.cityActions.updateCity(\n            this.update_data.id,\n            this.update_data,\n            params\n          );\n        }}\n        okText=\"Update\"\n      >\n        <Form className=\"mt-3\">\n          <FormGroup>\n            <Label for=\"name\">Name</Label>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              placeholder=\"City name here\"\n              defaultValue={city.name}\n              onChange={this.onChange}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"order\">Order</Label>\n            <Input\n              type=\"text\"\n              name=\"order\"\n              id=\"order\"\n              defaultValue={city.order}\n              onChange={this.onChange}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"is_open\">Open/Closed</Label>\n            <div>\n              <Switch\n                id=\"is_open\"\n                onClick={() => {\n                  this.setState({ is_open: ~~!this.state.is_open });\n                }}\n                on={!!this.state.is_open}\n              />\n            </div>\n          </FormGroup>\n          <FormGroup>\n            <Label>Image</Label>\n            <ImageUploader\n              style={{\n                position: 'relative',\n                width: '100%',\n                height: 'auto',\n                minHeight: '300px',\n                borderWidth: '2px',\n                borderColor: 'rgb(102, 102, 102)',\n                borderStyle: 'dashed',\n                borderRadius: '5px'\n              }}\n              handleOnLoad={this.onLoad}\n              image={settings.BASE_URL + this.props.modal.params.image_url}\n            />\n          </FormGroup>\n        </Form>\n      </ModalWrapper>\n    );\n  }\n}\n\nCityEdit = withRouter(CityEdit);\n\nexport default connect(\n  state => ({\n    ...state.default.services.city\n  }),\n  dispatch => ({\n    cityActions: bindActionCreators({ updateCity }, dispatch)\n  })\n)(CityEdit);\n"]},"metadata":{},"sourceType":"module"}