{"ast":null,"code":"import _objectSpread from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { getBase64, wrapRequest, xapi } from '../utils';\nvar getRestaurants = wrapRequest(\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(params) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", xapi().get('/api/restaurants', {\n              params: params\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());\nvar addRestaurant = wrapRequest(\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(restaurant) {\n    var file;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            file = null;\n\n            if (!restaurant.file) {\n              _context2.next = 5;\n              break;\n            }\n\n            _context2.next = 4;\n            return getBase64(restaurant.file);\n\n          case 4:\n            file = _context2.sent;\n\n          case 5:\n            return _context2.abrupt(\"return\", xapi().post('/api/restaurants/', _objectSpread({}, restaurant, {\n              file: file\n            })));\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nvar addRestaurants = wrapRequest(\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(data) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", xapi().post('/api/restaurants/insertmany', {\n              data: data\n            }));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}());\nvar deleteRestaurant = wrapRequest(\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(id) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", xapi().delete(\"/api/restaurants/\".concat(id)));\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x4) {\n    return _ref4.apply(this, arguments);\n  };\n}());\nvar updateRestaurant = wrapRequest(\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(id, restaurant) {\n    var file;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            file = null;\n\n            if (!restaurant.file) {\n              _context5.next = 5;\n              break;\n            }\n\n            _context5.next = 4;\n            return getBase64(restaurant.file);\n\n          case 4:\n            file = _context5.sent;\n\n          case 5:\n            return _context5.abrupt(\"return\", xapi().put(\"/api/restaurants/\".concat(id), _objectSpread({}, restaurant, {\n              file: file\n            })));\n\n          case 6:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref5.apply(this, arguments);\n  };\n}());\nvar getRestaurant = wrapRequest(\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee6(id) {\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            return _context6.abrupt(\"return\", xapi().get(\"/api/restaurants/\".concat(id)));\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function (_x7) {\n    return _ref6.apply(this, arguments);\n  };\n}());\nexport { getRestaurants, addRestaurant, addRestaurants, deleteRestaurant, updateRestaurant, getRestaurant };","map":{"version":3,"sources":["E:\\3-Limyong\\front\\src\\services\\restaurant\\restaurantApi.js"],"names":["getBase64","wrapRequest","xapi","getRestaurants","params","get","addRestaurant","restaurant","file","post","addRestaurants","data","deleteRestaurant","id","delete","updateRestaurant","put","getRestaurant"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,WAApB,EAAiCC,IAAjC,QAA6C,UAA7C;AAEA,IAAMC,cAAc,GAAGF,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAC,iBAAMG,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA,6CACjCF,IAAI,GAAGG,GAAP,CAAW,kBAAX,EAA+B;AAC7BD,cAAAA,MAAM,EAANA;AAD6B,aAA/B,CADiC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAAlC;AAMA,IAAME,aAAa,GAAGL,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAC,kBAAMM,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5BC,YAAAA,IAD4B,GACrB,IADqB;;AAAA,iBAE5BD,UAAU,CAACC,IAFiB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAGjBR,SAAS,CAACO,UAAU,CAACC,IAAZ,CAHQ;;AAAA;AAG9BA,YAAAA,IAH8B;;AAAA;AAAA,8CAMzBN,IAAI,GAAGO,IAAP,CAAY,mBAAZ,oBACFF,UADE;AAELC,cAAAA,IAAI,EAAJA;AAFK,eANyB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAAjC;AAYA,IAAME,cAAc,GAAGT,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAC,kBAAMU,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA,8CACjCT,IAAI,GAAGO,IAAP,CAAY,6BAAZ,EAA2C;AAAEE,cAAAA,IAAI,EAAJA;AAAF,aAA3C,CADiC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAAlC;AAIA,IAAMC,gBAAgB,GAAGX,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAC,kBAAMY,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA,8CACnCX,IAAI,GAAGY,MAAP,4BAAkCD,EAAlC,EADmC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAApC;AAIA,IAAME,gBAAgB,GAAGd,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAC,kBAAOY,EAAP,EAAWN,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/BC,YAAAA,IAD+B,GACxB,IADwB;;AAAA,iBAE/BD,UAAU,CAACC,IAFoB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAGpBR,SAAS,CAACO,UAAU,CAACC,IAAZ,CAHW;;AAAA;AAGjCA,YAAAA,IAHiC;;AAAA;AAAA,8CAK5BN,IAAI,GAAGc,GAAP,4BAA+BH,EAA/B,qBACFN,UADE;AAELC,cAAAA,IAAI,EAAJA;AAFK,eAL4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAApC;AAWA,IAAMS,aAAa,GAAGhB,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAC,kBAAMY,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA,8CAChCX,IAAI,GAAGG,GAAP,4BAA+BQ,EAA/B,EADgC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAAjC;AAIA,SACEV,cADF,EAEEG,aAFF,EAGEI,cAHF,EAIEE,gBAJF,EAKEG,gBALF,EAMEE,aANF","sourcesContent":["import { getBase64, wrapRequest, xapi } from '../utils';\n\nconst getRestaurants = wrapRequest(async params =>\n  xapi().get('/api/restaurants', {\n    params\n  })\n);\n\nconst addRestaurant = wrapRequest(async restaurant => {\n  let file = null;\n  if (restaurant.file) {\n    file = await getBase64(restaurant.file);\n  }\n\n  return xapi().post('/api/restaurants/', {\n    ...restaurant,\n    file\n  });\n});\n\nconst addRestaurants = wrapRequest(async data =>\n  xapi().post('/api/restaurants/insertmany', { data })\n);\n\nconst deleteRestaurant = wrapRequest(async id =>\n  xapi().delete(`/api/restaurants/${id}`)\n);\n\nconst updateRestaurant = wrapRequest(async (id, restaurant) => {\n  let file = null;\n  if (restaurant.file) {\n    file = await getBase64(restaurant.file);\n  }\n  return xapi().put(`/api/restaurants/${id}`, {\n    ...restaurant,\n    file\n  });\n});\n\nconst getRestaurant = wrapRequest(async id =>\n  xapi().get(`/api/restaurants/${id}`)\n);\n\nexport {\n  getRestaurants,\n  addRestaurant,\n  addRestaurants,\n  deleteRestaurant,\n  updateRestaurant,\n  getRestaurant\n};\n"]},"metadata":{},"sourceType":"module"}