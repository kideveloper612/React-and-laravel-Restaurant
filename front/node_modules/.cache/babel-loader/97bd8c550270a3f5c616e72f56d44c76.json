{"ast":null,"code":"import _defineProperty from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\3-Limyong\\\\front\\\\src\\\\components\\\\Switch\\\\Switch.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './switch.css';\nimport classNames from 'classnames';\n\nfunction noop() {}\n\nvar Switch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Switch, _Component);\n\n  function Switch(props) {\n    var _this;\n\n    _classCallCheck(this, Switch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Switch).call(this, props));\n\n    _this.toggle = function () {\n      var onClick = _this.props.onClick;\n      var checked = !_this.state.checked;\n\n      _this.setChecked(checked);\n\n      onClick(checked);\n    };\n\n    _this.handleKeyDown = function (e) {\n      if (e.keyCode === 37) {\n        // Left\n        _this.setChecked(false);\n      } else if (e.keyCode === 39) {\n        // Right\n        _this.setChecked(true);\n      }\n    };\n\n    _this.handleMouseUp = function (e) {\n      if (_this.node) {\n        _this.node.blur();\n      }\n\n      if (_this.props.onMouseUp) {\n        _this.props.onMouseUp(e);\n      }\n    };\n\n    _this.saveNode = function (node) {\n      _this.node = node;\n    };\n\n    var _checked = false;\n\n    if ('checked' in props) {\n      _checked = !!props.checked;\n    } else {\n      _checked = !!props.defaultChecked;\n    }\n\n    _this.state = {\n      checked: _checked\n    };\n    return _this;\n  }\n\n  _createClass(Switch, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          autoFocus = _this$props.autoFocus,\n          disabled = _this$props.disabled;\n\n      if (autoFocus && !disabled) {\n        this.focus();\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if ('checked' in nextProps) {\n        this.setState({\n          checked: !!nextProps.checked\n        });\n      }\n    }\n  }, {\n    key: \"setChecked\",\n    value: function setChecked(checked) {\n      if (this.props.disabled) {\n        return;\n      }\n\n      if (!('checked' in this.props)) {\n        this.setState({\n          checked: checked\n        });\n      }\n\n      this.props.onChange(checked);\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.node.focus();\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.node.blur();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          prefixCls = _this$props2.prefixCls,\n          disabled = _this$props2.disabled,\n          loadingIcon = _this$props2.loadingIcon,\n          checkedChildren = _this$props2.checkedChildren,\n          unCheckedChildren = _this$props2.unCheckedChildren,\n          restProps = _objectWithoutProperties(_this$props2, [\"className\", \"prefixCls\", \"disabled\", \"loadingIcon\", \"checkedChildren\", \"unCheckedChildren\"]);\n\n      var checked = this.state.checked;\n      var switchClassName = classNames((_classNames = {}, _defineProperty(_classNames, className, !!className), _defineProperty(_classNames, prefixCls, true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-checked\"), checked), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _classNames));\n      return React.createElement(\"button\", Object.assign({}, restProps, {\n        type: \"button\",\n        role: \"switch\",\n        \"aria-checked\": checked,\n        disabled: disabled,\n        className: switchClassName,\n        ref: this.saveNode,\n        onKeyDown: this.handleKeyDown,\n        onClick: this.toggle,\n        onMouseUp: this.handleMouseUp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), loadingIcon, React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-inner\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, checked ? checkedChildren : unCheckedChildren));\n    }\n  }]);\n\n  return Switch;\n}(Component);\n\nSwitch.propTypes = {\n  className: PropTypes.string,\n  prefixCls: PropTypes.string,\n  disabled: PropTypes.bool,\n  checkedChildren: PropTypes.any,\n  unCheckedChildren: PropTypes.any,\n  onChange: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  onClick: PropTypes.func,\n  tabIndex: PropTypes.number,\n  checked: PropTypes.bool,\n  defaultChecked: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  loadingIcon: PropTypes.node\n};\nSwitch.defaultProps = {\n  prefixCls: 'rc-switch',\n  checkedChildren: null,\n  unCheckedChildren: null,\n  className: '',\n  defaultChecked: false,\n  onChange: noop,\n  onClick: noop\n};\nexport default Switch;","map":{"version":3,"sources":["E:\\3-Limyong\\front\\src\\components\\Switch\\Switch.js"],"names":["React","Component","PropTypes","classNames","noop","Switch","props","toggle","onClick","checked","state","setChecked","handleKeyDown","e","keyCode","handleMouseUp","node","blur","onMouseUp","saveNode","defaultChecked","autoFocus","disabled","focus","nextProps","setState","onChange","className","prefixCls","loadingIcon","checkedChildren","unCheckedChildren","restProps","switchClassName","propTypes","string","bool","any","func","tabIndex","number","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './switch.css'\nimport classNames from 'classnames';\n\nfunction noop() {\n}\n\nclass Switch extends Component {\n  constructor(props) {\n    super(props);\n\n    let checked = false;\n    if ('checked' in props) {\n      checked = !!props.checked;\n    } else {\n      checked = !!props.defaultChecked;\n    }\n    this.state = { checked };\n  }\n\n  componentDidMount() {\n    const { autoFocus, disabled } = this.props;\n    if (autoFocus && !disabled) {\n      this.focus();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if ('checked' in nextProps) {\n      this.setState({\n        checked: !!nextProps.checked,\n      });\n    }\n  }\n\n  setChecked(checked) {\n    if (this.props.disabled) {\n      return;\n    }\n    if (!('checked' in this.props)) {\n      this.setState({\n        checked,\n      });\n    }\n    this.props.onChange(checked);\n  }\n\n  toggle = () => {\n    const { onClick } = this.props;\n    const checked = !this.state.checked;\n    this.setChecked(checked);\n    onClick(checked);\n  }\n\n  handleKeyDown = (e) => {\n    if (e.keyCode === 37) { // Left\n      this.setChecked(false);\n    } else if (e.keyCode === 39) { // Right\n      this.setChecked(true);\n    }\n  }\n\n  // Handle auto focus when click switch in Chrome\n  handleMouseUp = (e) => {\n    if (this.node) {\n      this.node.blur();\n    }\n    if (this.props.onMouseUp) {\n      this.props.onMouseUp(e);\n    }\n  }\n\n  focus() {\n    this.node.focus();\n  }\n\n  blur() {\n    this.node.blur();\n  }\n\n  saveNode = (node) => {\n    this.node = node;\n  }\n\n  render() {\n    const { className, prefixCls, disabled, loadingIcon,\n      checkedChildren, unCheckedChildren, ...restProps } = this.props;\n    const checked = this.state.checked;\n    const switchClassName = classNames({\n      [className]: !!className,\n      [prefixCls]: true,\n      [`${prefixCls}-checked`]: checked,\n      [`${prefixCls}-disabled`]: disabled,\n    });\n    return (\n      <button\n        {...restProps}\n        type=\"button\"\n        role=\"switch\"\n        aria-checked={checked}\n        disabled={disabled}\n        className={switchClassName}\n        ref={this.saveNode}\n        onKeyDown={this.handleKeyDown}\n        onClick={this.toggle}\n        onMouseUp={this.handleMouseUp}\n      >\n        {loadingIcon}\n        <span className={`${prefixCls}-inner`}>\n          {checked ? checkedChildren : unCheckedChildren}\n        </span>\n      </button>\n    );\n  }\n}\n\nSwitch.propTypes = {\n  className: PropTypes.string,\n  prefixCls: PropTypes.string,\n  disabled: PropTypes.bool,\n  checkedChildren: PropTypes.any,\n  unCheckedChildren: PropTypes.any,\n  onChange: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  onClick: PropTypes.func,\n  tabIndex: PropTypes.number,\n  checked: PropTypes.bool,\n  defaultChecked: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  loadingIcon: PropTypes.node,\n};\n\nSwitch.defaultProps = {\n  prefixCls: 'rc-switch',\n  checkedChildren: null,\n  unCheckedChildren: null,\n  className: '',\n  defaultChecked: false,\n  onChange: noop,\n  onClick: noop,\n};\n\nexport default Switch;"]},"metadata":{},"sourceType":"module"}