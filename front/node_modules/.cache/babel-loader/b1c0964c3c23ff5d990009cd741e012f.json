{"ast":null,"code":"import _defineProperty from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"E:\\\\3-Limyong\\\\front\\\\src\\\\modals\\\\components\\\\RestaurantAdd\\\\RestaurantAdd.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport queryString from 'query-string';\nimport { withRouter } from 'react-router-dom';\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\nimport Switch from 'react-toggle-switch';\nimport { ImageUploader } from 'components';\nimport Select from 'react-select';\nimport ModalWrapper from '../ModalWrapper';\nimport { addRestaurant } from 'services/restaurant/restaurantActions';\nimport { getCategories } from 'services/category/categoryActions';\nimport { getCities } from 'services/city/cityActions';\n\nvar RestaurantAdd =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RestaurantAdd, _React$Component);\n\n  function RestaurantAdd(props) {\n    var _this;\n\n    _classCallCheck(this, RestaurantAdd);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RestaurantAdd).call(this, props));\n    _this.state = {\n      is_open: 1,\n      category: []\n    };\n    _this.submit_data = {\n      order: 1\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onLoad = _this.onLoad.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onCategoryChange = _this.onCategoryChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onCityChange = _this.onCityChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(RestaurantAdd, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.cityActions.getCities();\n      this.props.categoryActions.getCategories();\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.submit_data = _objectSpread({}, this.submit_data, _defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"onLoad\",\n    value: function onLoad(file, file_type, file_name) {\n      this.submit_data = _objectSpread({}, this.submit_data, {\n        file: file,\n        file_type: file_type,\n        file_name: file_name\n      });\n    }\n  }, {\n    key: \"onCategoryChange\",\n    value: function onCategoryChange(category) {\n      this.setState({\n        category: category\n      });\n    }\n  }, {\n    key: \"onCityChange\",\n    value: function onCityChange(e) {\n      /* eslint-disable-next-line */\n      if (e.target.value != -1) {\n        this.props.categoryActions.getCategories({\n          city: e.target.value\n        });\n      } else {\n        this.props.categoryActions.getCategories();\n      }\n    }\n  }, {\n    key: \"renderCategoryOptions\",\n    value: function renderCategoryOptions(categories) {\n      if (categories && categories.data) {\n        var options = categories.data.map(function (category) {\n          return {\n            value: category.id,\n            label: \"\".concat(category.name, \" (\").concat(category.city.name, \")\")\n          };\n        });\n        return React.createElement(Select, {\n          options: options,\n          isMulti: true,\n          onChange: this.onCategoryChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"renderCityOptions\",\n    value: function renderCityOptions(cities) {\n      if (cities !== null) {\n        return cities.data.map(function (city, index) {\n          return React.createElement(\"option\", {\n            value: city.id,\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, city.name);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ModalWrapper, {\n        title: \"Restaurant add\",\n        okText: \"Submit\",\n        onOk: function onOk() {\n          var category = _this2.state.category.map(function (item) {\n            return item.value;\n          });\n\n          var params = queryString.parse(_this2.props.location.search);\n          var restaurant = {\n            name: _this2.submit_data.name,\n            order: _this2.submit_data.order,\n            file: _this2.submit_data.file,\n            file_type: _this2.submit_data.file_type,\n            file_name: _this2.submit_data.file_name,\n            is_open: _this2.state.is_open,\n            category: category\n          };\n\n          _this2.props.restaurantActions.addRestaurant(restaurant, params);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Form, {\n        className: \"mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \" Name \"), React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"Restaurant name here\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"city_id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"City\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"city_id\",\n        id: \"city_id\",\n        onChange: this.onCityChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \" No select \"), this.renderCityOptions(this.props.city.cities))), React.createElement(Label, {\n        for: \"category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Category\"), this.renderCategoryOptions(this.props.category.categories), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"order\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Order\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"order\",\n        id: \"order\",\n        placeholder: \"Order\",\n        defaultValue: 1,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"is_open\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Open/Closed\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        id: \"is_open\",\n        onClick: function onClick() {\n          _this2.setState({\n            is_open: ~~!_this2.state.is_open\n          });\n        },\n        on: !!this.state.is_open,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }))), React.createElement(ImageUploader, {\n        style: {\n          position: 'relative',\n          width: '100%',\n          height: 'auto',\n          minHeight: '300px',\n          borderWidth: '2px',\n          borderColor: 'rgb(102, 102, 102)',\n          borderStyle: 'dashed',\n          borderRadius: '5px'\n        },\n        handleOnLoad: this.onLoad,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return RestaurantAdd;\n}(React.Component);\n\nRestaurantAdd = withRouter(RestaurantAdd);\nexport default connect(function (state) {\n  return {\n    category: _objectSpread({}, state.default.services.category),\n    city: _objectSpread({}, state.default.services.city)\n  };\n}, function (dispatch) {\n  return {\n    restaurantActions: bindActionCreators({\n      addRestaurant: addRestaurant\n    }, dispatch),\n    categoryActions: bindActionCreators({\n      getCategories: getCategories\n    }, dispatch),\n    cityActions: bindActionCreators({\n      getCities: getCities\n    }, dispatch)\n  };\n})(RestaurantAdd);","map":{"version":3,"sources":["E:\\3-Limyong\\front\\src\\modals\\components\\RestaurantAdd\\RestaurantAdd.js"],"names":["React","connect","bindActionCreators","queryString","withRouter","Form","FormGroup","Label","Input","Switch","ImageUploader","Select","ModalWrapper","addRestaurant","getCategories","getCities","RestaurantAdd","props","state","is_open","category","submit_data","order","onChange","bind","onLoad","onCategoryChange","onCityChange","cityActions","categoryActions","e","target","name","value","file","file_type","file_name","setState","city","categories","data","options","map","id","label","cities","index","item","params","parse","location","search","restaurant","restaurantActions","renderCityOptions","renderCategoryOptions","position","width","height","minHeight","borderWidth","borderColor","borderStyle","borderRadius","Component","default","services","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport queryString from 'query-string';\nimport { withRouter } from 'react-router-dom';\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\nimport Switch from 'react-toggle-switch';\nimport { ImageUploader } from 'components';\nimport Select from 'react-select';\nimport ModalWrapper from '../ModalWrapper';\nimport { addRestaurant } from 'services/restaurant/restaurantActions';\nimport { getCategories } from 'services/category/categoryActions';\nimport { getCities } from 'services/city/cityActions';\n\nclass RestaurantAdd extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      is_open: 1,\n      category: []\n    };\n    this.submit_data = { order: 1 };\n\n    this.onChange = this.onChange.bind(this);\n    this.onLoad = this.onLoad.bind(this);\n    this.onCategoryChange = this.onCategoryChange.bind(this);\n    this.onCityChange = this.onCityChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.cityActions.getCities();\n    this.props.categoryActions.getCategories();\n  }\n\n  onChange(e) {\n    this.submit_data = {\n      ...this.submit_data,\n      [e.target.name]: e.target.value\n    };\n  }\n\n  onLoad(file, file_type, file_name) {\n    this.submit_data = {\n      ...this.submit_data,\n      file,\n      file_type,\n      file_name\n    };\n  }\n\n  onCategoryChange(category) {\n    this.setState({\n      category\n    });\n  }\n\n  onCityChange(e) {\n    /* eslint-disable-next-line */\n    if (e.target.value != -1) {\n      this.props.categoryActions.getCategories({\n        city: e.target.value\n      });\n    } else {\n      this.props.categoryActions.getCategories();\n    }\n  }\n\n  renderCategoryOptions(categories) {\n    if (categories && categories.data) {\n      const options = categories.data.map(category => {\n        return {\n          value: category.id,\n          label: `${category.name} (${category.city.name})`\n        };\n      });\n      return (\n        <Select options={options} isMulti onChange={this.onCategoryChange} />\n      );\n    }\n  }\n\n  renderCityOptions(cities) {\n    if (cities !== null) {\n      return cities.data.map((city, index) => (\n        <option value={city.id} key={index}>\n          {city.name}\n        </option>\n      ));\n    }\n  }\n\n  render() {\n    return (\n      <ModalWrapper\n        title=\"Restaurant add\"\n        okText=\"Submit\"\n        onOk={() => {\n          const category = this.state.category.map(item => {\n            return item.value;\n          });\n\n          const params = queryString.parse(this.props.location.search);\n\n          const restaurant = {\n            name: this.submit_data.name,\n            order: this.submit_data.order,\n            file: this.submit_data.file,\n            file_type: this.submit_data.file_type,\n            file_name: this.submit_data.file_name,\n            is_open: this.state.is_open,\n            category\n          };\n\n          this.props.restaurantActions.addRestaurant(restaurant, params);\n        }}\n      >\n        <Form className=\"mt-3\">\n          {/* Restaurant name here */}\n          <FormGroup>\n            <Label for=\"name\"> Name </Label>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              placeholder=\"Restaurant name here\"\n              onChange={this.onChange}\n            />\n          </FormGroup>\n\n          {/* city */}\n          <FormGroup>\n            <Label for=\"city_id\">City</Label>\n            <Input\n              type=\"select\"\n              name=\"city_id\"\n              id=\"city_id\"\n              onChange={this.onCityChange}\n            >\n              <option value=\"-1\"> No select </option>\n              {this.renderCityOptions(this.props.city.cities)}\n            </Input>\n          </FormGroup>\n\n          {/* Category Select form */}\n          <Label for=\"category\">Category</Label>\n          {this.renderCategoryOptions(this.props.category.categories)}\n\n          {/* Order */}\n          <FormGroup>\n            <Label for=\"order\">Order</Label>\n            <Input\n              type=\"text\"\n              name=\"order\"\n              id=\"order\"\n              placeholder=\"Order\"\n              defaultValue={1}\n              onChange={this.onChange}\n            />\n          </FormGroup>\n\n          {/* Switch on/off restaurant */}\n          <FormGroup>\n            <Label for=\"is_open\">Open/Closed</Label>\n            <div>\n              <Switch\n                id=\"is_open\"\n                onClick={() => {\n                  this.setState({ is_open: ~~!this.state.is_open });\n                }}\n                on={!!this.state.is_open}\n              />\n            </div>\n          </FormGroup>\n\n          {/* Image Upload form*/}\n          <ImageUploader\n            style={{\n              position: 'relative',\n              width: '100%',\n              height: 'auto',\n              minHeight: '300px',\n              borderWidth: '2px',\n              borderColor: 'rgb(102, 102, 102)',\n              borderStyle: 'dashed',\n              borderRadius: '5px'\n            }}\n            handleOnLoad={this.onLoad}\n          />\n        </Form>\n      </ModalWrapper>\n    );\n  }\n}\n\nRestaurantAdd = withRouter(RestaurantAdd);\n\nexport default connect(\n  state => ({\n    category: {\n      ...state.default.services.category\n    },\n    city: {\n      ...state.default.services.city\n    }\n  }),\n  dispatch => ({\n    restaurantActions: bindActionCreators({ addRestaurant }, dispatch),\n    categoryActions: bindActionCreators({ getCategories }, dispatch),\n    cityActions: bindActionCreators({ getCities }, dispatch)\n  })\n)(RestaurantAdd);\n"]},"metadata":{},"sourceType":"module"}