{"ast":null,"code":"import _defineProperty from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"E:\\\\3-Limyong\\\\front\\\\src\\\\scenes\\\\Home\\\\scenes\\\\MenuItems\\\\scenes\\\\List\\\\List.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { toastr } from 'react-redux-toastr';\nimport Swal from 'sweetalert2';\nimport CSVParse from 'csv-parse';\nimport moment from 'moment';\nimport { Button, FormGroup, Label, Input, UncontrolledCollapse } from 'reactstrap'; // Import Components\n\nimport MenuItemTable from './components/MenuItemTable';\nimport { Pagination } from 'components'; // Import Actions\n\nimport { getItems, addItems1 } from 'services/item/itemActions';\nimport { showModal } from 'modals/modalConductorActions'; // Import Utility functions\n\nimport { errorMsg, updateSearchQueryInUrl } from 'services/utils';\nimport queryString from 'query-string';\nimport settings from 'config/settings';\n\nvar List =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(List, _React$Component);\n\n  function List(props) {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this, props));\n    _this.state = {\n      activePage: 1\n    };\n    _this.renderItems = _this.renderItems.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onAddClick = _this.onAddClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onPaginationSelect = _this.onPaginationSelect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderPagination = _this.renderPagination.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onFilterChange = _this.onFilterChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSearchClick = _this.handleSearchClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onClickAddItemFromExcel = _this.onClickAddItemFromExcel.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChangeCSVFile = _this.onChangeCSVFile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onExportCSV = _this.onExportCSV.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      // Parse query string and send async api call\n      var params = queryString.parse(this.props.location.search);\n\n      if (params.page) {\n        this.setState({\n          activePage: params.page\n        });\n      }\n\n      this.props.itemActions.getItems(params);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.error !== prevProps.error && this.props.error !== null) {\n        var msg = errorMsg(this.props.error);\n        toastr.error(msg.title, msg.message);\n      }\n\n      if (this.props.success !== prevProps.success && this.props.success === true) {\n        toastr.success('Success', this.props.message);\n      } // If query param is changed\n\n\n      if (prevProps.location.search !== this.props.location.search) {\n        var params = queryString.parse(this.props.location.search);\n\n        if (params.page) {\n          this.setState({\n            activePage: params.page\n          });\n        }\n\n        this.props.itemActions.getItems(params);\n      }\n    }\n  }, {\n    key: \"onFilterChange\",\n    value: function onFilterChange(e) {\n      this.filter = _objectSpread({}, this.filter, _defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"onAddClick\",\n    value: function onAddClick() {\n      this.props.modalActions.showModal('ITEM_ADD_MODAL');\n    }\n  }, {\n    key: \"handleSearchClick\",\n    value: function handleSearchClick() {\n      updateSearchQueryInUrl(this);\n    }\n  }, {\n    key: \"onPaginationSelect\",\n    value: function onPaginationSelect(selectedPage) {\n      var values = queryString.parse(this.props.location.search);\n      values = _objectSpread({}, values, {\n        page: selectedPage\n      });\n      var searchQuery = queryString.stringify(values);\n      this.props.history.push({\n        pathname: this.props.location.pathname,\n        search: \"?\".concat(searchQuery)\n      });\n    }\n  }, {\n    key: \"onClickAddItemFromExcel\",\n    value: function onClickAddItemFromExcel() {\n      this.csvUploader.click();\n    }\n  }, {\n    key: \"onChangeCSVFile\",\n    value: function onChangeCSVFile(event) {\n      var _this2 = this;\n\n      var file = event.target.files[0];\n\n      if (file === undefined) {\n        return;\n      }\n\n      console.log(file);\n      var filename = file.name;\n\n      if (filename.substr(filename.length - 4, 4) !== \".csv\") {\n        toastr.warning('Warning', \"Please select .csv file\");\n        return;\n      }\n\n      var fileReader = new FileReader();\n      var output = [];\n\n      fileReader.onload = function () {\n        var params = queryString.parse(_this2.props.location.search);\n        CSVParse(fileReader.result, {}).on('readable', function () {\n          var record;\n\n          while (record = this.read()) {\n            var item = {};\n\n            if (record[6] !== '') {\n              item['created_at'] = moment().format('YYYY-MM-DD HH:mm:ss');\n              item['updated_at'] = moment().format('YYYY-MM-DD HH:mm:ss');\n              item['id'] = record[0];\n              item['name'] = record[1];\n              item['order'] = record[2];\n              item['image_url'] = record[3];\n              item['menu_id'] = record[4];\n              item['price'] = parseFloat(record[5]) * settings.INTEGER_PRECISION;\n              item['action'] = record[6];\n              output.push(item);\n            }\n          }\n        }).on('end', function () {\n          if (output[0]['id'] != \"Item_Id\") {\n            toastr.warning('Warning', \"Please select file for Item data\");\n            return;\n          }\n\n          output.splice(0, 1);\n          console.log(output);\n\n          if (output.length === 0) {\n            toastr.warning('Warning', \"No operations in file\");\n            return;\n          } else {\n            _this2.props.itemActions.addItems1(output, params);\n          }\n        });\n      };\n\n      fileReader.readAsText(file, \"UTF-8\");\n    }\n  }, {\n    key: \"downloadCSV\",\n    value: function downloadCSV(csv, filename) {\n      var csvFile;\n      var downloadLink; // CSV file\n\n      csvFile = new Blob([\"\\uFEFF\" + csv], {\n        type: \"text/csv;charset=UTF-8\"\n      }); // Download link\n\n      downloadLink = document.createElement(\"a\"); // File name\n\n      downloadLink.download = filename; // Create a link to the file\n\n      downloadLink.href = window.URL.createObjectURL(csvFile); // Hide download link\n\n      downloadLink.style.display = \"none\"; // Add the link to DOM\n\n      document.body.appendChild(downloadLink); // Click download link\n\n      downloadLink.click();\n    }\n  }, {\n    key: \"exportTableToCSV\",\n    value: function exportTableToCSV(filename) {\n      var csv = [];\n      var rows = document.querySelectorAll(\"table tr\");\n\n      for (var i = 0; i < rows.length; i++) {\n        var row = [],\n            cols = rows[i].querySelectorAll(\"td, th\");\n\n        if (i === 0) {\n          row = ['Item_Id', 'Name', 'Order', 'Image Url', 'Menu_Id', 'Price', 'Act(i/u/d)'];\n        } else {\n          row.push(cols[0].attributes[1].value); // Item_Id\n\n          row.push(cols[1].innerText); // Name\n\n          row.push(cols[4].innerText); // Order\n\n          if (cols[0].attributes[2]) {\n            row.push(cols[0].attributes[2].value); // Image Url\n          } else {\n            row.push(\"\");\n          }\n\n          row.push(cols[3].attributes[0].value); // Menu_Id\n\n          row.push(cols[2].innerText); // Price\n\n          row.push(\"\"); // Operation\n        }\n\n        csv.push(row.join(\",\"));\n      } // Download CSV file\n\n\n      this.downloadCSV(csv.join(\"\\n\"), filename);\n    }\n  }, {\n    key: \"onExportCSV\",\n    value: function onExportCSV() {\n      var self = this;\n      setTimeout(function () {\n        self.exportTableToCSV(\"Item.csv\");\n      }, 500);\n    }\n  }, {\n    key: \"renderItems\",\n    value: function renderItems() {\n      if (this.props.items) {\n        var data = this.props.items.data;\n\n        if (data && data.length > 0) {\n          return React.createElement(MenuItemTable, {\n            data: data,\n            from: this.props.items.meta ? this.props.items.meta.from : '',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 227\n            },\n            __self: this\n          });\n        } else {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 233\n            },\n            __self: this\n          }, \"No Menu data to list\");\n        }\n      }\n    }\n  }, {\n    key: \"renderPagination\",\n    value: function renderPagination() {\n      if (this.props.items && this.props.items.meta && this.props.items.data && this.props.items.data.length > 0) {\n        return React.createElement(Pagination, {\n          totalItems: this.props.items.meta.total,\n          pageSize: parseInt(this.props.items.meta.per_page),\n          onSelect: this.onPaginationSelect,\n          activePage: parseInt(this.state.activePage),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          loading = _this$props.loading,\n          message = _this$props.message; // if loading status show sweet alert\n\n      if (loading) {\n        Swal({\n          title: 'Please wait...',\n          text: message,\n          onOpen: function onOpen() {\n            Swal.showLoading();\n          },\n          allowOutsideClick: false,\n          allowEscapeKey: false,\n          allowEnterKey: false\n        });\n      } else {\n        Swal.close();\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-center mb-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"Items\"), React.createElement(\"div\", {\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"default\",\n        onClick: this.onAddClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }), \"\\xA0Add item\"), React.createElement(Button, {\n        id: \"toggler\",\n        color: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, \"Open filter\\xA0\", React.createElement(\"i\", {\n        className: \"fa fa-filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"file\",\n        style: {\n          display: 'none'\n        },\n        onChange: this.onChangeCSVFile,\n        onClick: function onClick(e) {\n          return e.target.value = null;\n        },\n        ref: function ref(_ref) {\n          _this3.csvUploader = _ref;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"default\",\n        onClick: this.onClickAddItemFromExcel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-file-excel-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }), \"\\xA0Add from CSV\"), React.createElement(Button, {\n        color: \"default\",\n        onClick: this.onExportCSV,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-file-excel-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }), \"\\xA0Export csv\")), React.createElement(UncontrolledCollapse, {\n        toggler: \"#toggler\",\n        className: \"col-md-8 col-sm-12 mt-5 mb-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, \"Item\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"item_name\",\n        onChange: this.onFilterChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      })), React.createElement(Button, {\n        onClick: this.handleSearchClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }), \"Search\")), React.createElement(\"div\", {\n        className: \"d-flex flex-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, this.renderItems(), this.renderPagination()));\n    }\n  }]);\n\n  return List;\n}(React.Component);\n\nexport default connect(function (state) {\n  return _objectSpread({}, state.default.services.item);\n}, function (dispatch) {\n  return {\n    itemActions: bindActionCreators({\n      getItems: getItems,\n      addItems1: addItems1\n    }, dispatch),\n    modalActions: bindActionCreators({\n      showModal: showModal\n    }, dispatch)\n  };\n})(List);","map":{"version":3,"sources":["E:\\3-Limyong\\front\\src\\scenes\\Home\\scenes\\MenuItems\\scenes\\List\\List.js"],"names":["React","connect","bindActionCreators","toastr","Swal","CSVParse","moment","Button","FormGroup","Label","Input","UncontrolledCollapse","MenuItemTable","Pagination","getItems","addItems1","showModal","errorMsg","updateSearchQueryInUrl","queryString","settings","List","props","state","activePage","renderItems","bind","onAddClick","onPaginationSelect","renderPagination","onFilterChange","handleSearchClick","onClickAddItemFromExcel","onChangeCSVFile","onExportCSV","params","parse","location","search","page","setState","itemActions","prevProps","error","msg","title","message","success","e","filter","target","name","value","modalActions","selectedPage","values","searchQuery","stringify","history","push","pathname","csvUploader","click","event","file","files","undefined","console","log","filename","substr","length","warning","fileReader","FileReader","output","onload","result","on","record","read","item","format","parseFloat","INTEGER_PRECISION","splice","readAsText","csv","csvFile","downloadLink","Blob","type","document","createElement","download","href","window","URL","createObjectURL","style","display","body","appendChild","rows","querySelectorAll","i","row","cols","attributes","innerText","join","downloadCSV","self","setTimeout","exportTableToCSV","items","data","meta","from","total","parseInt","per_page","loading","text","onOpen","showLoading","allowOutsideClick","allowEscapeKey","allowEnterKey","close","ref","Component","default","services","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { toastr } from 'react-redux-toastr';\nimport Swal from 'sweetalert2';\nimport CSVParse from 'csv-parse';\nimport moment from 'moment';\nimport {\n  Button,\n  FormGroup,\n  Label,\n  Input,\n  UncontrolledCollapse\n} from 'reactstrap';\n\n// Import Components\nimport MenuItemTable from './components/MenuItemTable';\nimport { Pagination } from 'components';\n\n// Import Actions\nimport { getItems, addItems1 } from 'services/item/itemActions';\nimport { showModal } from 'modals/modalConductorActions';\n\n// Import Utility functions\nimport { errorMsg, updateSearchQueryInUrl } from 'services/utils';\nimport queryString from 'query-string';\nimport settings from 'config/settings';\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activePage: 1\n    };\n\n    this.renderItems = this.renderItems.bind(this);\n    this.onAddClick = this.onAddClick.bind(this);\n    this.onPaginationSelect = this.onPaginationSelect.bind(this);\n    this.renderPagination = this.renderPagination.bind(this);\n    this.onFilterChange = this.onFilterChange.bind(this);\n    this.handleSearchClick = this.handleSearchClick.bind(this);\n    this.onClickAddItemFromExcel = this.onClickAddItemFromExcel.bind(this);\n    this.onChangeCSVFile = this.onChangeCSVFile.bind(this);\n    this.onExportCSV = this.onExportCSV.bind(this);\n  }\n\n  componentWillMount() {\n    // Parse query string and send async api call\n    const params = queryString.parse(this.props.location.search);\n    if (params.page) {\n      this.setState({\n        activePage: params.page\n      });\n    }\n    this.props.itemActions.getItems(params);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.error !== prevProps.error && this.props.error !== null) {\n      let msg = errorMsg(this.props.error);\n      toastr.error(msg.title, msg.message);\n    }\n\n    if (\n      this.props.success !== prevProps.success &&\n      this.props.success === true\n    ) {\n      toastr.success('Success', this.props.message);\n    }\n    \n    // If query param is changed\n    if (prevProps.location.search !== this.props.location.search) {\n      const params = queryString.parse(this.props.location.search);\n      if (params.page) {\n        this.setState({\n          activePage: params.page\n        });\n      }\n      this.props.itemActions.getItems(params);\n    }\n  }\n\n  onFilterChange(e) {\n    this.filter = {\n      ...this.filter,\n      [e.target.name]: e.target.value\n    };\n  }\n\n  onAddClick() {\n    this.props.modalActions.showModal('ITEM_ADD_MODAL');\n  }\n\n  handleSearchClick() {\n    updateSearchQueryInUrl(this);\n  }\n\n  onPaginationSelect(selectedPage) {\n    let values = queryString.parse(this.props.location.search);\n    values = {\n      ...values,\n      page: selectedPage\n    };\n\n    const searchQuery = queryString.stringify(values);\n    this.props.history.push({\n      pathname: this.props.location.pathname,\n      search: `?${searchQuery}`\n    });\n  }\n\n  onClickAddItemFromExcel() {\n    this.csvUploader.click();\n  }\n\n  onChangeCSVFile(event) {\n    let file = event.target.files[0];\n    if(file === undefined){\n      return;\n    }\n    console.log(file);\n    const filename = file.name;\n    if(filename.substr(filename.length - 4, 4) !== \".csv\"){\n      toastr.warning('Warning', \"Please select .csv file\");\n      return;\n    }\n    const fileReader = new FileReader();\n    const output = [];\n    fileReader.onload = () => {\n      const params = queryString.parse(this.props.location.search);\n      CSVParse(fileReader.result, {})\n        .on('readable', function() {\n          let record;\n          while ((record = this.read())) {\n            let item = {};\n            if(record[6] !== ''){\n              item['created_at'] = moment().format('YYYY-MM-DD HH:mm:ss');\n              item['updated_at'] = moment().format('YYYY-MM-DD HH:mm:ss');\n              item['id'] = record[0];\n              item['name'] = record[1];\n              item['order'] = record[2];\n              item['image_url'] = record[3];\n              item['menu_id'] = record[4];\n              item['price'] = parseFloat(record[5]) * settings.INTEGER_PRECISION;\n              item['action'] = record[6];\n              output.push(item);\n            }\n          }\n        })\n        .on('end', () => {\n          if(output[0]['id'] != \"Item_Id\"){\n            toastr.warning('Warning', \"Please select file for Item data\");\n            return;\n          } \n          output.splice(0, 1);\n          console.log(output);\n          if(output.length === 0){\n            toastr.warning('Warning', \"No operations in file\");\n            return;\n          } else{\n            this.props.itemActions.addItems1(output, params);\n          }\n        });\n    };\n    fileReader.readAsText(file, \"UTF-8\");\n  }\n\n  downloadCSV(csv, filename) {\n      var csvFile;\n      var downloadLink;\n      // CSV file\n      csvFile = new Blob([\"\\ufeff\"+csv], {type: \"text/csv;charset=UTF-8\"});\n      // Download link\n      downloadLink = document.createElement(\"a\");\n      // File name\n      downloadLink.download = filename;\n      // Create a link to the file\n      downloadLink.href = window.URL.createObjectURL(csvFile);\n      // Hide download link\n      downloadLink.style.display = \"none\";\n      // Add the link to DOM\n      document.body.appendChild(downloadLink);\n      // Click download link\n      downloadLink.click();\n  }\n\n  exportTableToCSV(filename) {\n      var csv = [];\n      var rows = document.querySelectorAll(\"table tr\");\n      for (var i = 0; i < rows.length; i++) {\n          var row = [], cols = rows[i].querySelectorAll(\"td, th\");\n          if(i === 0){\n            row = ['Item_Id', 'Name', 'Order', 'Image Url', 'Menu_Id', 'Price', 'Act(i/u/d)'];\n          } else{\n            row.push(cols[0].attributes[1].value); // Item_Id\n            row.push(cols[1].innerText); // Name\n            row.push(cols[4].innerText); // Order\n            if(cols[0].attributes[2]){\n              row.push(cols[0].attributes[2].value); // Image Url\n            } else{\n              row.push(\"\");\n            }\n            row.push(cols[3].attributes[0].value); // Menu_Id\n            row.push(cols[2].innerText); // Price\n            row.push(\"\"); // Operation\n          }\n          csv.push(row.join(\",\"));\n      }\n      // Download CSV file\n      this.downloadCSV(csv.join(\"\\n\"), filename);\n  }\n\n  onExportCSV(){\n    let self = this;\n    setTimeout(function(){\n      self.exportTableToCSV(\"Item.csv\");\n    }, 500);\n  }\n\n  renderItems() {\n    if (this.props.items) {\n      const { data } = this.props.items;\n\n      if (data && data.length > 0) {\n        return (\n          <MenuItemTable\n            data={data}\n            from={this.props.items.meta ? this.props.items.meta.from : ''}\n          />\n        );\n      } else {\n        return <div>No Menu data to list</div>;\n      }\n    }\n  }\n\n  renderPagination() {\n    if (\n      this.props.items &&\n      this.props.items.meta &&\n      this.props.items.data &&\n      this.props.items.data.length > 0\n    ) {\n      return (\n        <Pagination\n          totalItems={this.props.items.meta.total}\n          pageSize={parseInt(this.props.items.meta.per_page)}\n          onSelect={this.onPaginationSelect}\n          activePage={parseInt(this.state.activePage)}\n        />\n      );\n    }\n  }\n\n  render() {\n    const { loading, message } = this.props;\n\n    // if loading status show sweet alert\n    if (loading) {\n      Swal({\n        title: 'Please wait...',\n        text: message,\n        onOpen: () => {\n          Swal.showLoading();\n        },\n        allowOutsideClick: false,\n        allowEscapeKey: false,\n        allowEnterKey: false\n      });\n    } else {\n      Swal.close();\n    }\n\n    return (\n      <div>\n        <h1 className=\"text-center mb-5\">Items</h1>\n        <div className=\"mb-3\">\n          {/* Action button */}\n          <Button \n            color=\"default\" \n            onClick={this.onAddClick}\n          >\n            <i className=\"fa fa-plus\" />\n            &nbsp;Add item\n          </Button>\n          <Button id=\"toggler\" color=\"warning\">\n            Open filter&nbsp;\n            <i className=\"fa fa-filter\" />\n          </Button>\n          <input\n            type=\"file\"\n            style={{ display: 'none' }}\n            onChange={this.onChangeCSVFile}\n            onClick={(e) => e.target.value = null}\n            ref={ref => {\n              this.csvUploader = ref;\n            }}\n          />\n          <Button color=\"default\" onClick={this.onClickAddItemFromExcel}>\n            <i className=\"fa fa-file-excel-o\" />\n            &nbsp;Add from CSV\n          </Button>\n          <Button \n            color=\"default\" \n            onClick={this.onExportCSV}\n          >\n            <i className=\"fa fa-file-excel-o\" />\n            &nbsp;Export csv\n          </Button>\n        </div>\n        {/* Filter Box*/}\n        <UncontrolledCollapse\n          toggler=\"#toggler\"\n          className=\"col-md-8 col-sm-12 mt-5 mb-5\"\n        >\n          <FormGroup>\n            <Label>Item</Label>\n            <Input\n              type=\"text\"\n              name=\"item_name\"\n              onChange={this.onFilterChange}\n            />\n          </FormGroup>\n          <Button onClick={this.handleSearchClick}>\n            <i className=\"fa fa-search\" />\n            Search\n          </Button>\n        </UncontrolledCollapse>\n        <div className=\"d-flex flex-column\">\n          {/* Render Menu items table*/}\n          {this.renderItems()}\n          {/* Render pagination */}\n          {this.renderPagination()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    ...state.default.services.item\n  }),\n  dispatch => ({\n    itemActions: bindActionCreators({ getItems, addItems1 }, dispatch),\n    modalActions: bindActionCreators({ showModal }, dispatch)\n  })\n)(List);\n"]},"metadata":{},"sourceType":"module"}