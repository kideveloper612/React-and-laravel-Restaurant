{"ast":null,"code":"import _defineProperty from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"E:\\\\3-Limyong\\\\front\\\\src\\\\scenes\\\\Home\\\\scenes\\\\Menu\\\\scenes\\\\List\\\\components\\\\MenuEditModal\\\\MenuEditModal.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Label, ModalHeader, ModalBody, ModalFooter, FormGroup, Form, Input, Button } from 'reactstrap';\nimport { ImageUploader } from 'components';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { updateMenu } from 'services/menu/menuActions';\nimport queryString from 'query-string';\n\nvar MenuEditModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MenuEditModal, _React$Component);\n\n  function MenuEditModal(props) {\n    var _this;\n\n    _classCallCheck(this, MenuEditModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MenuEditModal).call(this, props));\n    _this.update_data = _objectSpread({}, props.menu);\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MenuEditModal, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.menu !== prevProps.menu) {\n        this.update_data = {\n          name: this.props.menu.name,\n          id: this.props.menu.id,\n          restaurant_id: this.props.menu.restaurant.id,\n          order: this.props.menu.order\n        };\n      }\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.update_data = _objectSpread({}, this.update_data, _defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"renderRestaurantOptions\",\n    value: function renderRestaurantOptions(restaurants) {\n      var _this2 = this;\n\n      if (restaurants) {\n        return restaurants.map(function (restaurant, index) {\n          return React.createElement(\"option\", {\n            key: index,\n            value: restaurant.id,\n            onChange: _this2.onChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, restaurant.name);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          modal = _this$props.modal,\n          toggle = _this$props.toggle,\n          restaurants = _this$props.restaurants;\n      var _this$props$menu = this.props.menu,\n          name = _this$props$menu.name,\n          restaurant = _this$props$menu.restaurant,\n          order = _this$props$menu.order;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        isOpen: modal,\n        toggle: toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \" Menu Edit \"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \" Name \"), React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"Menu name here\",\n        defaultValue: name,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"restaurant\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Restaurant\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"restaurant_id\",\n        id: \"restaurant_id\",\n        defaultValue: restaurant ? restaurant.id : '',\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.renderRestaurantOptions(restaurants))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"order\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Order\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"order\",\n        id: \"order\",\n        defaultValue: order,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick() {\n          _this3.update_data = _objectSpread({}, _this3.update_data);\n          var params = queryString.parse(_this3.props.location.search);\n\n          _this3.props.menuActions.updateMenu(_this3.update_data.id, _this3.update_data, params);\n\n          toggle();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Update\"), React.createElement(Button, {\n        color: \"secondary\",\n        onClick: function onClick() {\n          toggle();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Cancel\"))));\n    }\n  }]);\n\n  return MenuEditModal;\n}(React.Component);\n\nMenuEditModal.propTypes = {\n  toggle: PropTypes.func,\n  modal: PropTypes.bool,\n  menu: PropTypes.object\n};\nMenuEditModal = withRouter(MenuEditModal);\nexport default connect(null, function (dispatch) {\n  return {\n    menuActions: bindActionCreators({\n      updateMenu: updateMenu\n    }, dispatch)\n  };\n})(MenuEditModal);","map":{"version":3,"sources":["E:\\3-Limyong\\front\\src\\scenes\\Home\\scenes\\Menu\\scenes\\List\\components\\MenuEditModal\\MenuEditModal.js"],"names":["React","PropTypes","Modal","Label","ModalHeader","ModalBody","ModalFooter","FormGroup","Form","Input","Button","ImageUploader","connect","bindActionCreators","withRouter","updateMenu","queryString","MenuEditModal","props","update_data","menu","onChange","bind","prevProps","name","id","restaurant_id","restaurant","order","e","target","value","restaurants","map","index","modal","toggle","renderRestaurantOptions","params","parse","location","search","menuActions","Component","propTypes","func","bool","object","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Modal,\n  Label,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  FormGroup,\n  Form,\n  Input,\n  Button\n} from 'reactstrap';\nimport { ImageUploader } from 'components';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { updateMenu } from 'services/menu/menuActions';\nimport queryString from 'query-string';\n\nclass MenuEditModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.update_data = {\n      ...props.menu\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.menu !== prevProps.menu) {\n      this.update_data = {\n        name: this.props.menu.name,\n        id: this.props.menu.id,\n        restaurant_id: this.props.menu.restaurant.id,\n        order: this.props.menu.order\n      };\n    }\n  }\n\n  onChange(e) {\n    this.update_data = {\n      ...this.update_data,\n      [e.target.name]: e.target.value\n    };\n  }\n\n  renderRestaurantOptions(restaurants) {\n    if (restaurants) {\n      return restaurants.map((restaurant, index) => (\n        <option key={index} value={restaurant.id} onChange={this.onChange}>\n          {restaurant.name}\n        </option>\n      ));\n    }\n  }\n\n  render() {\n    const { modal, toggle, restaurants } = this.props;\n    const { name, restaurant, order } = this.props.menu;\n    return (\n      <div>\n        <Modal isOpen={modal} toggle={toggle}>\n          <ModalHeader toggle={toggle}> Menu Edit </ModalHeader>\n          <ModalBody>\n            <Form>\n              <FormGroup>\n                <Label for=\"name\"> Name </Label>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  placeholder=\"Menu name here\"\n                  defaultValue={name}\n                  onChange={this.onChange}\n                />\n              </FormGroup>\n            </Form>\n            <FormGroup>\n              <Label for=\"restaurant\">Restaurant</Label>\n              <Input\n                type=\"select\"\n                name=\"restaurant_id\"\n                id=\"restaurant_id\"\n                defaultValue={restaurant ? restaurant.id : ''}\n                onChange={this.onChange}\n              >\n                {this.renderRestaurantOptions(restaurants)}\n              </Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"order\">Order</Label>\n              <Input\n                type=\"text\"\n                name=\"order\"\n                id=\"order\"\n                defaultValue={order}\n                onChange={this.onChange}\n              />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                this.update_data = {\n                  ...this.update_data\n                };\n                const params = queryString.parse(this.props.location.search);\n\n                this.props.menuActions.updateMenu(\n                  this.update_data.id,\n                  this.update_data,\n                  params\n                );\n                toggle();\n              }}\n            >\n              Update\n            </Button>\n            <Button\n              color=\"secondary\"\n              onClick={() => {\n                toggle();\n              }}\n            >\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nMenuEditModal.propTypes = {\n  toggle: PropTypes.func,\n  modal: PropTypes.bool,\n  menu: PropTypes.object\n};\n\nMenuEditModal = withRouter(MenuEditModal);\n\nexport default connect(\n  null,\n  dispatch => ({\n    menuActions: bindActionCreators({ updateMenu }, dispatch)\n  })\n)(MenuEditModal);\n"]},"metadata":{},"sourceType":"module"}