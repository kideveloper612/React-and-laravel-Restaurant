{"ast":null,"code":"import _defineProperty from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"E:\\\\3-Limyong\\\\front\\\\src\\\\modals\\\\components\\\\CategoryAdd\\\\CategoryAdd.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport queryString from 'query-string';\nimport { withRouter } from 'react-router-dom';\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\nimport Switch from 'react-toggle-switch';\nimport { ImageUploader } from 'components';\nimport ModalWrapper from '../ModalWrapper';\nimport { addCategory } from 'services/category/categoryActions';\nimport { getCities } from 'services/city/cityActions';\n\nvar CategoryAdd =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CategoryAdd, _React$Component);\n\n  function CategoryAdd(props) {\n    var _this;\n\n    _classCallCheck(this, CategoryAdd);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CategoryAdd).call(this, props));\n    _this.state = {\n      is_open: 1\n    };\n    _this.submit_data = {\n      order: 1\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onLoad = _this.onLoad.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderCityOptions = _this.renderCityOptions.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CategoryAdd, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.cityActions.getCities();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.city !== prevProps.city) {\n        if (this.props.city && this.props.city.cities && this.props.city.cities.data) {\n          this.submit_data = _objectSpread({}, this.submit_data, {\n            city_id: this.props.city.cities.data[0].id\n          });\n        }\n      }\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.submit_data = _objectSpread({}, this.submit_data, _defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"onLoad\",\n    value: function onLoad(file, file_type, file_name) {\n      this.submit_data = _objectSpread({}, this.submit_data, {\n        file: file,\n        file_type: file_type,\n        file_name: file_name\n      });\n    }\n  }, {\n    key: \"renderCityOptions\",\n    value: function renderCityOptions(cities) {\n      if (cities !== null) {\n        return cities.data.map(function (city, index) {\n          return React.createElement(\"option\", {\n            value: city.id,\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }, city.name);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ModalWrapper, {\n        title: \"Add category\",\n        okText: \"Submit\",\n        onOk: function onOk() {\n          var params = queryString.parse(_this2.props.location.search);\n          _this2.submit_data = _objectSpread({}, _this2.submit_data, {\n            is_open: _this2.state.is_open\n          });\n\n          _this2.props.categoryActions.addCategory(_this2.submit_data, params);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Form, {\n        className: \"mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"Category name here\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"city\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"City\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"city_id\",\n        id: \"city_id\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, this.renderCityOptions(this.props.city.cities))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"order\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Order\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"order\",\n        id: \"order\",\n        placeholder: \"Order\",\n        defaultValue: 1,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"is_open\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Open/Closed\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        id: \"is_open\",\n        onClick: function onClick() {\n          _this2.setState({\n            is_open: ~~!_this2.state.is_open\n          });\n        },\n        on: !!this.state.is_open,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Image\"), React.createElement(ImageUploader, {\n        style: {\n          position: 'relative',\n          width: '100%',\n          height: 'auto',\n          minHeight: '300px',\n          borderWidth: '2px',\n          borderColor: 'rgb(102, 102, 102)',\n          borderStyle: 'dashed',\n          borderRadius: '5px'\n        },\n        handleOnLoad: this.onLoad,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return CategoryAdd;\n}(React.Component);\n\nCategoryAdd = withRouter(CategoryAdd);\nexport default connect(function (state) {\n  return {\n    city: _objectSpread({}, state.default.services.city)\n  };\n}, function (dispatch) {\n  return {\n    cityActions: bindActionCreators({\n      getCities: getCities\n    }, dispatch),\n    categoryActions: bindActionCreators({\n      addCategory: addCategory\n    }, dispatch)\n  };\n})(CategoryAdd);","map":{"version":3,"sources":["E:\\3-Limyong\\front\\src\\modals\\components\\CategoryAdd\\CategoryAdd.js"],"names":["React","connect","bindActionCreators","queryString","withRouter","Form","FormGroup","Label","Input","Switch","ImageUploader","ModalWrapper","addCategory","getCities","CategoryAdd","props","state","is_open","submit_data","order","onChange","bind","onLoad","renderCityOptions","cityActions","prevProps","city","cities","data","city_id","id","e","target","name","value","file","file_type","file_name","map","index","params","parse","location","search","categoryActions","setState","position","width","height","minHeight","borderWidth","borderColor","borderStyle","borderRadius","Component","default","services","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport queryString from 'query-string';\nimport { withRouter } from 'react-router-dom';\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\nimport Switch from 'react-toggle-switch';\nimport { ImageUploader } from 'components';\nimport ModalWrapper from '../ModalWrapper';\nimport { addCategory } from 'services/category/categoryActions';\nimport { getCities } from 'services/city/cityActions';\n\nclass CategoryAdd extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { is_open: 1 };\n    this.submit_data = { order: 1 };\n\n    this.onChange = this.onChange.bind(this);\n    this.onLoad = this.onLoad.bind(this);\n    this.renderCityOptions = this.renderCityOptions.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.cityActions.getCities();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.city !== prevProps.city) {\n      if (\n        this.props.city &&\n        this.props.city.cities &&\n        this.props.city.cities.data\n      ) {\n        this.submit_data = {\n          ...this.submit_data,\n          city_id: this.props.city.cities.data[0].id\n        };\n      }\n    }\n  }\n\n  onChange(e) {\n    this.submit_data = {\n      ...this.submit_data,\n      [e.target.name]: e.target.value\n    };\n  }\n\n  onLoad(file, file_type, file_name) {\n    this.submit_data = {\n      ...this.submit_data,\n      file,\n      file_type,\n      file_name\n    };\n  }\n\n  renderCityOptions(cities) {\n    if (cities !== null) {\n      return cities.data.map((city, index) => (\n        <option value={city.id} key={index}>\n          {city.name}\n        </option>\n      ));\n    }\n  }\n\n  render() {\n    return (\n      <ModalWrapper\n        title=\"Add category\"\n        okText=\"Submit\"\n        onOk={() => {\n          const params = queryString.parse(this.props.location.search);\n          this.submit_data = {\n            ...this.submit_data,\n            is_open: this.state.is_open\n          };\n\n          this.props.categoryActions.addCategory(this.submit_data, params);\n        }}\n      >\n        <Form className=\"mt-3\">\n          {/* Category name */}\n          <FormGroup>\n            <Label for=\"name\">Name</Label>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              placeholder=\"Category name here\"\n              onChange={this.onChange}\n            />\n          </FormGroup>\n\n          {/* Category city */}\n          <FormGroup>\n            <Label for=\"city\">City</Label>\n            <Input\n              type=\"select\"\n              name=\"city_id\"\n              id=\"city_id\"\n              onChange={this.onChange}\n            >\n              {this.renderCityOptions(this.props.city.cities)}\n            </Input>\n          </FormGroup>\n\n          {/* Category order */}\n          <FormGroup>\n            <Label for=\"order\">Order</Label>\n            <Input\n              type=\"text\"\n              name=\"order\"\n              id=\"order\"\n              placeholder=\"Order\"\n              defaultValue={1}\n              onChange={this.onChange}\n            />\n          </FormGroup>\n\n          {/* Category switch on/off */}\n          <FormGroup>\n            <Label for=\"is_open\">Open/Closed</Label>\n            <div>\n              <Switch\n                id=\"is_open\"\n                onClick={() => {\n                  this.setState({ is_open: ~~!this.state.is_open });\n                }}\n                on={!!this.state.is_open}\n              />\n            </div>\n          </FormGroup>\n\n          {/* Category image */}\n          <FormGroup>\n            <Label>Image</Label>\n            <ImageUploader\n              style={{\n                position: 'relative',\n                width: '100%',\n                height: 'auto',\n                minHeight: '300px',\n                borderWidth: '2px',\n                borderColor: 'rgb(102, 102, 102)',\n                borderStyle: 'dashed',\n                borderRadius: '5px'\n              }}\n              handleOnLoad={this.onLoad}\n            />\n          </FormGroup>\n        </Form>\n      </ModalWrapper>\n    );\n  }\n}\n\nCategoryAdd = withRouter(CategoryAdd);\n\nexport default connect(\n  state => ({\n    city: {\n      ...state.default.services.city\n    }\n  }),\n  dispatch => ({\n    cityActions: bindActionCreators({ getCities }, dispatch),\n    categoryActions: bindActionCreators({ addCategory }, dispatch)\n  })\n)(CategoryAdd);\n"]},"metadata":{},"sourceType":"module"}