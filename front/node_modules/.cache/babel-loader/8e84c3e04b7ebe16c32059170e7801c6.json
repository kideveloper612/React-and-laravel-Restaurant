{"ast":null,"code":"import _objectSpread from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { wrapRequest, xapi, getBase64 } from '../utils';\nvar getCategories = wrapRequest(\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(params) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", xapi().get('/api/categories', {\n              params: params\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());\nvar addCategory = wrapRequest(\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(category) {\n    var file;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            file = null;\n\n            if (!category.file) {\n              _context2.next = 5;\n              break;\n            }\n\n            _context2.next = 4;\n            return getBase64(category.file);\n\n          case 4:\n            file = _context2.sent;\n\n          case 5:\n            return _context2.abrupt(\"return\", xapi().post('/api/categories/', _objectSpread({}, category, {\n              file: file\n            })));\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nvar addCategories = wrapRequest(\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(data) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", xapi().post('/api/categories/insertmany', {\n              data: data\n            }));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}());\nvar deleteCategory = wrapRequest(\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(id) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", xapi().delete(\"/api/categories/\".concat(id)));\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x4) {\n    return _ref4.apply(this, arguments);\n  };\n}());\nvar updateCategory = wrapRequest(\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(id, category) {\n    var file;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            file = null;\n\n            if (!category.file) {\n              _context5.next = 5;\n              break;\n            }\n\n            _context5.next = 4;\n            return getBase64(category.file);\n\n          case 4:\n            file = _context5.sent;\n\n          case 5:\n            return _context5.abrupt(\"return\", xapi().put(\"/api/categories/\".concat(id), _objectSpread({}, category, {\n              file: file\n            })));\n\n          case 6:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref5.apply(this, arguments);\n  };\n}());\nvar getCategory = wrapRequest(\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee6(id) {\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            return _context6.abrupt(\"return\", xapi().get(\"/api/categories/\".concat(id)));\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function (_x7) {\n    return _ref6.apply(this, arguments);\n  };\n}());\nexport { getCategories, addCategory, addCategories, deleteCategory, updateCategory, getCategory };","map":{"version":3,"sources":["E:\\3-Limyong\\front\\src\\services\\category\\categoryApi.js"],"names":["wrapRequest","xapi","getBase64","getCategories","params","get","addCategory","category","file","post","addCategories","data","deleteCategory","id","delete","updateCategory","put","getCategory"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,IAAtB,EAA4BC,SAA5B,QAA6C,UAA7C;AAEA,IAAMC,aAAa,GAAGH,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAC,iBAAMI,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA,6CAChCH,IAAI,GAAGI,GAAP,CAAW,iBAAX,EAA8B;AAC5BD,cAAAA,MAAM,EAANA;AAD4B,aAA9B,CADgC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAAjC;AAMA,IAAME,WAAW,GAAGN,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAC,kBAAMO,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1BC,YAAAA,IAD0B,GACnB,IADmB;;AAAA,iBAE1BD,QAAQ,CAACC,IAFiB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAGfN,SAAS,CAACK,QAAQ,CAACC,IAAV,CAHM;;AAAA;AAG5BA,YAAAA,IAH4B;;AAAA;AAAA,8CAKvBP,IAAI,GAAGQ,IAAP,CAAY,kBAAZ,oBACFF,QADE;AAELC,cAAAA,IAAI,EAAJA;AAFK,eALuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAA/B;AAWA,IAAME,aAAa,GAAGV,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAC,kBAAMW,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA,8CAChCV,IAAI,GAAGQ,IAAP,CAAY,4BAAZ,EAA0C;AAAEE,cAAAA,IAAI,EAAJA;AAAF,aAA1C,CADgC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAAjC;AAIA,IAAMC,cAAc,GAAGZ,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAC,kBAAMa,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA,8CACjCZ,IAAI,GAAGa,MAAP,2BAAiCD,EAAjC,EADiC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAAlC;AAIA,IAAME,cAAc,GAAGf,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAC,kBAAOa,EAAP,EAAWN,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7BC,YAAAA,IAD6B,GACtB,IADsB;;AAAA,iBAG7BD,QAAQ,CAACC,IAHoB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAIlBN,SAAS,CAACK,QAAQ,CAACC,IAAV,CAJS;;AAAA;AAI/BA,YAAAA,IAJ+B;;AAAA;AAAA,8CAM1BP,IAAI,GAAGe,GAAP,2BAA8BH,EAA9B,qBACFN,QADE;AAELC,cAAAA,IAAI,EAAJA;AAFK,eAN0B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAAlC;AAYA,IAAMS,WAAW,GAAGjB,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAC,kBAAMa,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA,8CAC9BZ,IAAI,GAAGI,GAAP,2BAA8BQ,EAA9B,EAD8B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAA/B;AAIA,SACEV,aADF,EAEEG,WAFF,EAGEI,aAHF,EAIEE,cAJF,EAKEG,cALF,EAMEE,WANF","sourcesContent":["import { wrapRequest, xapi, getBase64 } from '../utils';\n\nconst getCategories = wrapRequest(async params =>\n  xapi().get('/api/categories', {\n    params\n  })\n);\n\nconst addCategory = wrapRequest(async category => {\n  let file = null;\n  if (category.file) {\n    file = await getBase64(category.file);\n  }\n  return xapi().post('/api/categories/', {\n    ...category,\n    file\n  });\n});\n\nconst addCategories = wrapRequest(async data =>\n  xapi().post('/api/categories/insertmany', { data })\n);\n\nconst deleteCategory = wrapRequest(async id =>\n  xapi().delete(`/api/categories/${id}`)\n);\n\nconst updateCategory = wrapRequest(async (id, category) => {\n  let file = null;\n\n  if (category.file) {\n    file = await getBase64(category.file);\n  }\n  return xapi().put(`/api/categories/${id}`, {\n    ...category,\n    file\n  });\n});\n\nconst getCategory = wrapRequest(async id =>\n  xapi().get(`/api/categories/${id}`)\n);\n\nexport {\n  getCategories,\n  addCategory,\n  addCategories,\n  deleteCategory,\n  updateCategory,\n  getCategory\n};\n"]},"metadata":{},"sourceType":"module"}