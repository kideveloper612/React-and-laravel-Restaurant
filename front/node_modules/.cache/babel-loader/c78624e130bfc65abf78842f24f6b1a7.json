{"ast":null,"code":"import _objectSpread from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { wrapRequest, xapi, getBase64 } from '../utils';\nvar getCities = wrapRequest(\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(params) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", xapi().get('/api/cities', {\n              params: params\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());\nvar addCity = wrapRequest(\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(city) {\n    var file;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            file = null;\n\n            if (!city.file) {\n              _context2.next = 5;\n              break;\n            }\n\n            _context2.next = 4;\n            return getBase64(city.file);\n\n          case 4:\n            file = _context2.sent;\n\n          case 5:\n            return _context2.abrupt(\"return\", xapi().post('/api/cities/', _objectSpread({}, city, {\n              file: file\n            })));\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nvar addCities = wrapRequest(\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(data) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", xapi().post('/api/cities/insertmany', {\n              data: data\n            }));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}());\nvar deleteCity = wrapRequest(\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(id) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", xapi().delete(\"/api/cities/\".concat(id)));\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x4) {\n    return _ref4.apply(this, arguments);\n  };\n}());\nvar updateCity = wrapRequest(\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(id, city) {\n    var file;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            file = null;\n\n            if (!city.file) {\n              _context5.next = 5;\n              break;\n            }\n\n            _context5.next = 4;\n            return getBase64(city.file);\n\n          case 4:\n            file = _context5.sent;\n\n          case 5:\n            return _context5.abrupt(\"return\", xapi().put(\"/api/cities/\".concat(id), _objectSpread({}, city, {\n              file: file\n            })));\n\n          case 6:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref5.apply(this, arguments);\n  };\n}());\nvar getCityWithId = wrapRequest(\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee6(id) {\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            return _context6.abrupt(\"return\", xapi().get(\"/api/cities/\".concat(id)));\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function (_x7) {\n    return _ref6.apply(this, arguments);\n  };\n}());\nexport { getCities, addCity, deleteCity, updateCity, getCityWithId, addCities };","map":{"version":3,"sources":["E:\\3-Limyong\\front\\src\\services\\city\\cityApi.js"],"names":["wrapRequest","xapi","getBase64","getCities","params","get","addCity","city","file","post","addCities","data","deleteCity","id","delete","updateCity","put","getCityWithId"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,IAAtB,EAA4BC,SAA5B,QAA6C,UAA7C;AAEA,IAAMC,SAAS,GAAGH,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAC,iBAAMI,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA,6CAC5BH,IAAI,GAAGI,GAAP,CAAW,aAAX,EAA0B;AACxBD,cAAAA,MAAM,EAANA;AADwB,aAA1B,CAD4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAA7B;AAMA,IAAME,OAAO,GAAGN,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAC,kBAAMO,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBC,YAAAA,IADsB,GACf,IADe;;AAAA,iBAGtBD,IAAI,CAACC,IAHiB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAIXN,SAAS,CAACK,IAAI,CAACC,IAAN,CAJE;;AAAA;AAIxBA,YAAAA,IAJwB;;AAAA;AAAA,8CAOnBP,IAAI,GAAGQ,IAAP,CAAY,cAAZ,oBACFF,IADE;AAELC,cAAAA,IAAI,EAAJA;AAFK,eAPmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAA3B;AAaA,IAAME,SAAS,GAAGV,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAC,kBAAMW,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA,8CAC5BV,IAAI,GAAGQ,IAAP,CAAY,wBAAZ,EAAsC;AAAEE,cAAAA,IAAI,EAAJA;AAAF,aAAtC,CAD4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAA7B;AAIA,IAAMC,UAAU,GAAGZ,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAC,kBAAMa,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAYZ,IAAI,GAAGa,MAAP,uBAA6BD,EAA7B,EAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAA9B;AAEA,IAAME,UAAU,GAAGf,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAC,kBAAOa,EAAP,EAAWN,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACzBC,YAAAA,IADyB,GAClB,IADkB;;AAAA,iBAGzBD,IAAI,CAACC,IAHoB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAIdN,SAAS,CAACK,IAAI,CAACC,IAAN,CAJK;;AAAA;AAI3BA,YAAAA,IAJ2B;;AAAA;AAAA,8CAOtBP,IAAI,GAAGe,GAAP,uBAA0BH,EAA1B,qBACFN,IADE;AAELC,cAAAA,IAAI,EAAJA;AAFK,eAPsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAA9B;AAaA,IAAMS,aAAa,GAAGjB,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAC,kBAAMa,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAYZ,IAAI,GAAGI,GAAP,uBAA0BQ,EAA1B,EAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAAjC;AAEA,SAASV,SAAT,EAAoBG,OAApB,EAA6BM,UAA7B,EAAyCG,UAAzC,EAAqDE,aAArD,EAAoEP,SAApE","sourcesContent":["import { wrapRequest, xapi, getBase64 } from '../utils';\n\nconst getCities = wrapRequest(async params =>\n  xapi().get('/api/cities', {\n    params\n  })\n);\n\nconst addCity = wrapRequest(async city => {\n  let file = null;\n\n  if (city.file) {\n    file = await getBase64(city.file);\n  }\n\n  return xapi().post('/api/cities/', {\n    ...city,\n    file\n  });\n});\n\nconst addCities = wrapRequest(async data =>\n  xapi().post('/api/cities/insertmany', { data })\n);\n\nconst deleteCity = wrapRequest(async id => xapi().delete(`/api/cities/${id}`));\n\nconst updateCity = wrapRequest(async (id, city) => {\n  let file = null;\n\n  if (city.file) {\n    file = await getBase64(city.file);\n  }\n\n  return xapi().put(`/api/cities/${id}`, {\n    ...city,\n    file\n  });\n});\n\nconst getCityWithId = wrapRequest(async id => xapi().get(`/api/cities/${id}`));\n\nexport { getCities, addCity, deleteCity, updateCity, getCityWithId, addCities };\n"]},"metadata":{},"sourceType":"module"}