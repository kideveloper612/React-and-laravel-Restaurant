{"ast":null,"code":"import _defineProperty from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"E:\\\\3-Limyong\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"E:\\\\3-Limyong\\\\front\\\\src\\\\modals\\\\components\\\\RestaurantEdit\\\\RestaurantEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport queryString from 'query-string';\nimport { withRouter } from 'react-router-dom';\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\nimport Switch from 'react-toggle-switch';\nimport Select from 'react-select';\nimport { ImageUploader } from 'components';\nimport settings from 'config/settings';\nimport ModalWrapper from '../ModalWrapper'; // Import Actions\n\nimport { updateRestaurant } from 'services/restaurant/restaurantActions';\nimport { getCategories } from 'services/category/categoryActions';\n\nvar RestaurantEdit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RestaurantEdit, _React$Component);\n\n  function RestaurantEdit(props) {\n    var _this;\n\n    _classCallCheck(this, RestaurantEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RestaurantEdit).call(this, props));\n    _this.update_data = _objectSpread({}, props.modal.params);\n    _this.state = {\n      is_open: props.modal.params.is_open\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onLoad = _this.onLoad.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onCategoryChange = _this.onCategoryChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(RestaurantEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.categoryActions.getCategories();\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.update_data = _objectSpread({}, this.update_data, _defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"onLoad\",\n    value: function onLoad(file, file_type, file_name) {\n      this.update_data = _objectSpread({}, this.update_data, {\n        file: file,\n        file_type: file_type,\n        file_name: file_name\n      });\n    }\n  }, {\n    key: \"onCategoryChange\",\n    value: function onCategoryChange(options) {\n      var categories = options.map(function (item) {\n        return {\n          id: item.value,\n          name: item.label\n        };\n      });\n      this.update_data = _objectSpread({}, this.update_data, {\n        categories: categories\n      });\n      this.forceUpdate();\n    }\n  }, {\n    key: \"renderCategoryOptions\",\n    value: function renderCategoryOptions(categories) {\n      if (categories && categories.data) {\n        var options = categories.data.map(function (category) {\n          return {\n            value: category.id,\n            label: \"\".concat(category.name, \" (\").concat(category.city.name, \")\")\n          };\n        });\n        var optionValue = [];\n\n        if (this.update_data.categories) {\n          optionValue = this.update_data.categories.map(function (item) {\n            return {\n              value: item.id,\n              label: item.name\n            };\n          });\n        }\n\n        return React.createElement(Select, {\n          options: options,\n          isMulti: true,\n          onChange: this.onCategoryChange,\n          value: optionValue,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var restaurant = this.props.modal.params;\n      return React.createElement(ModalWrapper, {\n        title: \"Update restaurant\",\n        okText: \"Update\",\n        onOk: function onOk() {\n          var params = queryString.parse(_this2.props.location.search);\n\n          var category = _this2.update_data.categories.map(function (item) {\n            return item.id;\n          });\n\n          _this2.update_data = _objectSpread({}, _this2.update_data, {\n            is_open: _this2.state.is_open,\n            category: category\n          });\n\n          _this2.props.restaurantActions.updateRestaurant(_this2.update_data.id, _this2.update_data, params);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Form, {\n        className: \"mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"Restaurant name here\",\n        onChange: this.onChange,\n        defaultValue: restaurant.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })), React.createElement(Label, {\n        for: \"category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Category\"), this.renderCategoryOptions(this.props.category.categories), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"order\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Order\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"order\",\n        id: \"order\",\n        placeholder: \"Order\",\n        onChange: this.onChange,\n        defaultValue: restaurant.order,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"is_open\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Open/Closed\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        id: \"is_open\",\n        onClick: function onClick() {\n          _this2.setState({\n            is_open: ~~!_this2.state.is_open\n          });\n        },\n        on: !!this.state.is_open,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }))), React.createElement(ImageUploader, {\n        style: {\n          position: 'relative',\n          width: '100%',\n          height: 'auto',\n          minHeight: '300px',\n          borderWidth: '2px',\n          borderColor: 'rgb(102, 102, 102)',\n          borderStyle: 'dashed',\n          borderRadius: '5px'\n        },\n        handleOnLoad: this.onLoad,\n        image: settings.BASE_URL + this.props.modal.params.image_url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return RestaurantEdit;\n}(React.Component);\n\nRestaurantEdit = withRouter(RestaurantEdit);\nexport default connect(function (state) {\n  return {\n    category: state.default.services.category\n  };\n}, function (dispatch) {\n  return {\n    categoryActions: bindActionCreators({\n      getCategories: getCategories\n    }, dispatch),\n    restaurantActions: bindActionCreators({\n      updateRestaurant: updateRestaurant\n    }, dispatch)\n  };\n})(RestaurantEdit);","map":{"version":3,"sources":["E:\\3-Limyong\\front\\src\\modals\\components\\RestaurantEdit\\RestaurantEdit.js"],"names":["React","connect","bindActionCreators","queryString","withRouter","Form","FormGroup","Label","Input","Switch","Select","ImageUploader","settings","ModalWrapper","updateRestaurant","getCategories","RestaurantEdit","props","update_data","modal","params","state","is_open","onChange","bind","onLoad","onCategoryChange","categoryActions","e","target","name","value","file","file_type","file_name","options","categories","map","item","id","label","forceUpdate","data","category","city","optionValue","restaurant","parse","location","search","restaurantActions","renderCategoryOptions","order","setState","position","width","height","minHeight","borderWidth","borderColor","borderStyle","borderRadius","BASE_URL","image_url","Component","default","services","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport queryString from 'query-string';\nimport { withRouter } from 'react-router-dom';\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\nimport Switch from 'react-toggle-switch';\nimport Select from 'react-select';\nimport { ImageUploader } from 'components';\nimport settings from 'config/settings';\nimport ModalWrapper from '../ModalWrapper';\n\n// Import Actions\nimport { updateRestaurant } from 'services/restaurant/restaurantActions';\nimport { getCategories } from 'services/category/categoryActions';\n\nclass RestaurantEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.update_data = {\n      ...props.modal.params\n    };\n\n    this.state = {\n      is_open: props.modal.params.is_open\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onLoad = this.onLoad.bind(this);\n    this.onCategoryChange = this.onCategoryChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.categoryActions.getCategories();\n  }\n\n  onChange(e) {\n    this.update_data = {\n      ...this.update_data,\n      [e.target.name]: e.target.value\n    };\n  }\n\n  onLoad(file, file_type, file_name) {\n    this.update_data = {\n      ...this.update_data,\n      file,\n      file_type,\n      file_name\n    };\n  }\n\n  onCategoryChange(options) {\n    const categories = options.map(item => {\n      return {\n        id: item.value,\n        name: item.label\n      };\n    });\n\n    this.update_data = {\n      ...this.update_data,\n      categories\n    };\n    this.forceUpdate();\n  }\n\n  renderCategoryOptions(categories) {\n    if (categories && categories.data) {\n      const options = categories.data.map(category => {\n        return {\n          value: category.id,\n          label: `${category.name} (${category.city.name})`\n        };\n      });\n\n      let optionValue = [];\n      if (this.update_data.categories) {\n        optionValue = this.update_data.categories.map(item => {\n          return {\n            value: item.id,\n            label: item.name\n          };\n        });\n      }\n\n      return (\n        <Select\n          options={options}\n          isMulti\n          onChange={this.onCategoryChange}\n          value={optionValue}\n        />\n      );\n    }\n  }\n\n  render() {\n    const restaurant = this.props.modal.params;\n\n    return (\n      <ModalWrapper\n        title=\"Update restaurant\"\n        okText=\"Update\"\n        onOk={() => {\n          const params = queryString.parse(this.props.location.search);\n\n          const category = this.update_data.categories.map(item => {\n            return item.id;\n          });\n\n          this.update_data = {\n            ...this.update_data,\n            is_open: this.state.is_open,\n            category\n          };\n\n          this.props.restaurantActions.updateRestaurant(\n            this.update_data.id,\n            this.update_data,\n            params\n          );\n        }}\n      >\n        <Form className=\"mt-3\">\n          <FormGroup>\n            <Label for=\"name\">Name</Label>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              placeholder=\"Restaurant name here\"\n              onChange={this.onChange}\n              defaultValue={restaurant.name}\n            />\n          </FormGroup>\n          <Label for=\"category\">Category</Label>\n\n          {/* Category Select form*/}\n          {this.renderCategoryOptions(this.props.category.categories)}\n\n          {/* Order */}\n          <FormGroup>\n            <Label for=\"order\">Order</Label>\n            <Input\n              type=\"text\"\n              name=\"order\"\n              id=\"order\"\n              placeholder=\"Order\"\n              onChange={this.onChange}\n              defaultValue={restaurant.order}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for=\"is_open\">Open/Closed</Label>\n            <div>\n              <Switch\n                id=\"is_open\"\n                onClick={() => {\n                  this.setState({ is_open: ~~!this.state.is_open });\n                }}\n                on={!!this.state.is_open}\n              />\n            </div>\n          </FormGroup>\n\n          {/* Image Upload form*/}\n          <ImageUploader\n            style={{\n              position: 'relative',\n              width: '100%',\n              height: 'auto',\n              minHeight: '300px',\n              borderWidth: '2px',\n              borderColor: 'rgb(102, 102, 102)',\n              borderStyle: 'dashed',\n              borderRadius: '5px'\n            }}\n            handleOnLoad={this.onLoad}\n            image={settings.BASE_URL + this.props.modal.params.image_url}\n          />\n        </Form>\n      </ModalWrapper>\n    );\n  }\n}\n\nRestaurantEdit = withRouter(RestaurantEdit);\n\nexport default connect(\n  state => ({\n    category: state.default.services.category\n  }),\n  dispatch => ({\n    categoryActions: bindActionCreators({ getCategories }, dispatch),\n    restaurantActions: bindActionCreators({ updateRestaurant }, dispatch)\n  })\n)(RestaurantEdit);\n"]},"metadata":{},"sourceType":"module"}